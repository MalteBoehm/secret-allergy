{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/context/AuthContextProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport AuthContext from \"./AuthContext\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { loadTokenFromLocalStorage, saveTokenToLocalStorage, loadUserDataFromLocalStorage, saveUserDataToLocalStorage, deleteTokenFromLocalStorage } from \"../service/AsyncStorage\";\n\nvar tokenFromStorage = function tokenFromStorage() {\n  var value;\n  return _regeneratorRuntime.async(function tokenFromStorage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('ACCESS_TOKEN'));\n\n        case 2:\n          value = _context.sent;\n          console.log(value + \" Das Token\");\n\n          if (!value) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", value);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar userFromStorage = function userFromStorage() {\n  var jsonValue;\n  return _regeneratorRuntime.async(function userFromStorage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"USER_DATA\"));\n\n        case 2:\n          jsonValue = _context2.sent;\n          console.log(jsonValue);\n\n          if (!jsonValue) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", jsonValue);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function (_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(tokenFromStorage),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(userFromStorage),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userData = _useState4[0],\n      setUserData = _useState4[1];\n\n  console.log(userData + \" UserData\");\n  useEffect(function () {\n    if (token) {\n      try {\n        var decoded = jwtDecode(token);\n        console.log(decoded.toString() + \" value of decoded token\");\n        console.log(decoded.user);\n\n        if (decoded.exp > new Date().getTime() / 1000) {\n          setUserData(decoded);\n          saveTokenToLocalStorage(token);\n          saveUserDataToLocalStorage(decoded);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [token]);\n\n  var tokenIsValid = function tokenIsValid() {\n    return token && (userData == null ? void 0 : userData.exp) > new Date().getTime() / 1000;\n  };\n\n  var loginWithUserCredentials = function loginWithUserCredentials(loginData) {\n    return axios.post('http://192.168.178.76:8080/auth/login', loginData).then(function (response) {\n      setToken(response.data);\n    });\n  };\n\n  var logout = function logout() {\n    return deleteTokenFromLocalStorage();\n  };\n\n  console.log(tokenIsValid() + \" \" + token);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: token,\n      setToken: setToken,\n      logout: logout,\n      tokenIsValid: tokenIsValid,\n      loginWithUserCredentials: loginWithUserCredentials,\n      userData: userData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/context/AuthContextProvider.js"],"names":["React","useEffect","useState","AuthContext","axios","jwtDecode","AsyncStorage","loadTokenFromLocalStorage","saveTokenToLocalStorage","loadUserDataFromLocalStorage","saveUserDataToLocalStorage","deleteTokenFromLocalStorage","tokenFromStorage","getItem","value","console","log","userFromStorage","jsonValue","children","token","setToken","userData","setUserData","decoded","toString","user","exp","Date","getTime","e","tokenIsValid","loginWithUserCredentials","loginData","post","then","response","data","logout"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {\n    loadTokenFromLocalStorage ,\n    saveTokenToLocalStorage,\n    loadUserDataFromLocalStorage,\n    saveUserDataToLocalStorage,\n    deleteTokenFromLocalStorage\n    } from '../service/AsyncStorage';\n\n\n\nconst tokenFromStorage = async () =>{\n    const value = await AsyncStorage.getItem('ACCESS_TOKEN');\n    console.log(value + \" Das Token\")\n    if(value){\n        return value;\n    }\n}\n\nconst userFromStorage = async () =>{\n    const jsonValue = await AsyncStorage.getItem(\"USER_DATA\");\n    console.log(jsonValue)\n    if(jsonValue){\n        return jsonValue;\n    }\n}\n\n\n\nexport default function ( {children} ) {\n    const [token, setToken] = useState(tokenFromStorage);\n\n    const [userData, setUserData] = useState(userFromStorage);\n    console.log(userData + \" UserData\")\n\n\n    useEffect(() => {\n        if (token) {\n            try {\n                const decoded = jwtDecode(token);\n                console.log(decoded.toString() + \" value of decoded token\")\n                console.log(decoded.user)\n                if (decoded.exp > new Date().getTime() / 1000) {\n                    setUserData(decoded);\n                    saveTokenToLocalStorage(token);\n                    saveUserDataToLocalStorage(decoded);\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    }, [token]);\n\n    const tokenIsValid = () =>\n        token && userData?.exp > new Date().getTime() / 1000;\n\n    const loginWithUserCredentials = (loginData) =>\n        axios\n            .post('http://192.168.178.76:8080/auth/login', loginData)\n            .then((response) => {\n                setToken(response.data)\n            });\n\n    const logout = () =>\n        deleteTokenFromLocalStorage();\n\n    console.log(tokenIsValid() + \" \" + token)\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                setToken,\n                logout,\n                tokenIsValid,\n                loginWithUserCredentials,\n                userData,\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}