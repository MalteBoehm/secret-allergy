{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/node_modules/@react-navigation/stack/src/views/Stack/CardContainer.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTheme } from '@react-navigation/native';\nimport Card from \"./Card\";\nimport HeaderHeightContext from \"../../utils/HeaderHeightContext\";\nimport HeaderShownContext from \"../../utils/HeaderShownContext\";\nimport PreviousSceneContext from \"../../utils/PreviousSceneContext\";\nvar EPSILON = 0.1;\n\nfunction CardContainer(_ref) {\n  var active = _ref.active,\n      cardOverlay = _ref.cardOverlay,\n      cardOverlayEnabled = _ref.cardOverlayEnabled,\n      cardShadowEnabled = _ref.cardShadowEnabled,\n      cardStyle = _ref.cardStyle,\n      cardStyleInterpolator = _ref.cardStyleInterpolator,\n      closing = _ref.closing,\n      gesture = _ref.gesture,\n      focused = _ref.focused,\n      gestureDirection = _ref.gestureDirection,\n      gestureEnabled = _ref.gestureEnabled,\n      gestureResponseDistance = _ref.gestureResponseDistance,\n      gestureVelocityImpact = _ref.gestureVelocityImpact,\n      getPreviousScene = _ref.getPreviousScene,\n      getFocusedRoute = _ref.getFocusedRoute,\n      mode = _ref.mode,\n      headerMode = _ref.headerMode,\n      headerShown = _ref.headerShown,\n      headerStyleInterpolator = _ref.headerStyleInterpolator,\n      hasAbsoluteHeader = _ref.hasAbsoluteHeader,\n      headerHeight = _ref.headerHeight,\n      onHeaderHeightChange = _ref.onHeaderHeightChange,\n      isParentHeaderShown = _ref.isParentHeaderShown,\n      index = _ref.index,\n      layout = _ref.layout,\n      onCloseRoute = _ref.onCloseRoute,\n      onOpenRoute = _ref.onOpenRoute,\n      onPageChangeCancel = _ref.onPageChangeCancel,\n      onPageChangeConfirm = _ref.onPageChangeConfirm,\n      onPageChangeStart = _ref.onPageChangeStart,\n      onGestureCancel = _ref.onGestureCancel,\n      onGestureEnd = _ref.onGestureEnd,\n      onGestureStart = _ref.onGestureStart,\n      onTransitionEnd = _ref.onTransitionEnd,\n      onTransitionStart = _ref.onTransitionStart,\n      renderHeader = _ref.renderHeader,\n      renderScene = _ref.renderScene,\n      safeAreaInsetBottom = _ref.safeAreaInsetBottom,\n      safeAreaInsetLeft = _ref.safeAreaInsetLeft,\n      safeAreaInsetRight = _ref.safeAreaInsetRight,\n      safeAreaInsetTop = _ref.safeAreaInsetTop,\n      scene = _ref.scene,\n      transitionSpec = _ref.transitionSpec;\n  React.useEffect(function () {\n    onPageChangeConfirm == null ? void 0 : onPageChangeConfirm();\n  }, [active, onPageChangeConfirm]);\n\n  var handleOpen = function handleOpen() {\n    onTransitionEnd == null ? void 0 : onTransitionEnd({\n      route: scene.route\n    }, false);\n    onOpenRoute({\n      route: scene.route\n    });\n  };\n\n  var handleClose = function handleClose() {\n    onTransitionEnd == null ? void 0 : onTransitionEnd({\n      route: scene.route\n    }, true);\n    onCloseRoute({\n      route: scene.route\n    });\n  };\n\n  var handleGestureBegin = function handleGestureBegin() {\n    onPageChangeStart == null ? void 0 : onPageChangeStart();\n    onGestureStart == null ? void 0 : onGestureStart({\n      route: scene.route\n    });\n  };\n\n  var handleGestureCanceled = function handleGestureCanceled() {\n    onPageChangeCancel == null ? void 0 : onPageChangeCancel();\n    onGestureCancel == null ? void 0 : onGestureCancel({\n      route: scene.route\n    });\n  };\n\n  var handleGestureEnd = function handleGestureEnd() {\n    onGestureEnd == null ? void 0 : onGestureEnd({\n      route: scene.route\n    });\n  };\n\n  var handleTransitionStart = function handleTransitionStart(_ref2) {\n    var closing = _ref2.closing;\n\n    if (active && closing) {\n      onPageChangeConfirm == null ? void 0 : onPageChangeConfirm();\n    } else {\n      onPageChangeCancel == null ? void 0 : onPageChangeCancel();\n    }\n\n    onTransitionStart == null ? void 0 : onTransitionStart({\n      route: scene.route\n    }, closing);\n  };\n\n  var insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft\n  };\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState('box-none'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pointerEvents = _React$useState2[0],\n      setPointerEvents = _React$useState2[1];\n\n  React.useEffect(function () {\n    var _scene$progress$next;\n\n    var listener = (_scene$progress$next = scene.progress.next) == null ? void 0 : _scene$progress$next.addListener == null ? void 0 : _scene$progress$next.addListener(function (_ref3) {\n      var value = _ref3.value;\n      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n    });\n    return function () {\n      if (listener) {\n        var _scene$progress$next2;\n\n        (_scene$progress$next2 = scene.progress.next) == null ? void 0 : _scene$progress$next2.removeListener == null ? void 0 : _scene$progress$next2.removeListener(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n  var isCurrentHeaderShown = headerMode !== 'none' && headerShown !== false;\n  var previousScene = getPreviousScene({\n    route: scene.route\n  });\n  return React.createElement(Card, {\n    index: index,\n    gestureDirection: gestureDirection,\n    layout: layout,\n    insets: insets,\n    gesture: gesture,\n    current: scene.progress.current,\n    next: scene.progress.next,\n    closing: closing,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    overlay: cardOverlay,\n    overlayEnabled: cardOverlayEnabled,\n    shadowEnabled: cardShadowEnabled,\n    onTransitionStart: handleTransitionStart,\n    onGestureBegin: handleGestureBegin,\n    onGestureCanceled: handleGestureCanceled,\n    onGestureEnd: handleGestureEnd,\n    gestureEnabled: gestureEnabled,\n    gestureResponseDistance: gestureResponseDistance,\n    gestureVelocityImpact: gestureVelocityImpact,\n    transitionSpec: transitionSpec,\n    styleInterpolator: cardStyleInterpolator,\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    pointerEvents: active ? 'box-none' : pointerEvents,\n    pageOverflowEnabled: headerMode === 'screen' && mode === 'card',\n    containerStyle: hasAbsoluteHeader ? {\n      marginTop: headerHeight\n    } : null,\n    contentStyle: [{\n      backgroundColor: colors.background\n    }, cardStyle],\n    style: [{\n      overflow: active ? undefined : 'hidden'\n    }, StyleSheet.absoluteFill],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.scene,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, React.createElement(PreviousSceneContext.Provider, {\n    value: previousScene,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || isCurrentHeaderShown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, React.createElement(HeaderHeightContext.Provider, {\n    value: headerHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, renderScene({\n    route: scene.route\n  }))))), headerMode === 'screen' ? renderHeader({\n    mode: 'screen',\n    layout: layout,\n    insets: insets,\n    scenes: [previousScene, scene],\n    getPreviousScene: getPreviousScene,\n    getFocusedRoute: getFocusedRoute,\n    gestureDirection: gestureDirection,\n    styleInterpolator: headerStyleInterpolator,\n    onContentHeightChange: onHeaderHeightChange\n  }) : null));\n}\n\nexport default React.memo(CardContainer);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/node_modules/@react-navigation/stack/src/views/Stack/CardContainer.tsx"],"names":["React","useTheme","Card","HeaderHeightContext","HeaderShownContext","PreviousSceneContext","EPSILON","CardContainer","active","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","closing","gesture","focused","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","getPreviousScene","getFocusedRoute","mode","headerMode","headerShown","headerStyleInterpolator","hasAbsoluteHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","index","layout","onCloseRoute","onOpenRoute","onPageChangeCancel","onPageChangeConfirm","onPageChangeStart","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","transitionSpec","useEffect","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransitionStart","insets","top","right","bottom","left","colors","useState","pointerEvents","setPointerEvents","listener","progress","next","addListener","value","removeListener","isCurrentHeaderShown","previousScene","current","marginTop","backgroundColor","background","overflow","undefined","StyleSheet","absoluteFill","styles","container","scenes","styleInterpolator","onContentHeightChange","memo","create","flex","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { Route, useTheme } from '@react-navigation/native';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\nimport HeaderHeightContext from '../../utils/HeaderHeightContext';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nimport type {\n  Scene,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  TransitionPreset,\n} from '../../types';\n\ntype Props = TransitionPreset & {\n  index: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  scene: Scene<Route<string>>;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  cardOverlay?: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  cardOverlayEnabled?: boolean;\n  cardShadowEnabled?: boolean;\n  cardStyle?: StyleProp<ViewStyle>;\n  getPreviousScene: (props: {\n    route: Route<string>;\n  }) => Scene<Route<string>> | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart?: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd?: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n  onGestureStart?: (props: { route: Route<string> }) => void;\n  onGestureEnd?: (props: { route: Route<string> }) => void;\n  onGestureCancel?: (props: { route: Route<string> }) => void;\n  gestureEnabled?: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact?: number;\n  mode: StackCardMode;\n  headerMode: StackHeaderMode;\n  headerShown: boolean;\n  hasAbsoluteHeader: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  isParentHeaderShown: boolean;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  active,\n  cardOverlay,\n  cardOverlayEnabled,\n  cardShadowEnabled,\n  cardStyle,\n  cardStyleInterpolator,\n  closing,\n  gesture,\n  focused,\n  gestureDirection,\n  gestureEnabled,\n  gestureResponseDistance,\n  gestureVelocityImpact,\n  getPreviousScene,\n  getFocusedRoute,\n  mode,\n  headerMode,\n  headerShown,\n  headerStyleInterpolator,\n  hasAbsoluteHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  isParentHeaderShown,\n  index,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onPageChangeCancel,\n  onPageChangeConfirm,\n  onPageChangeStart,\n  onGestureCancel,\n  onGestureEnd,\n  onGestureStart,\n  onTransitionEnd,\n  onTransitionStart,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n  transitionSpec,\n}: Props) {\n  React.useEffect(() => {\n    onPageChangeConfirm?.();\n  }, [active, onPageChangeConfirm]);\n\n  const handleOpen = () => {\n    onTransitionEnd?.({ route: scene.route }, false);\n    onOpenRoute({ route: scene.route });\n  };\n\n  const handleClose = () => {\n    onTransitionEnd?.({ route: scene.route }, true);\n    onCloseRoute({ route: scene.route });\n  };\n\n  const handleGestureBegin = () => {\n    onPageChangeStart?.();\n    onGestureStart?.({ route: scene.route });\n  };\n\n  const handleGestureCanceled = () => {\n    onPageChangeCancel?.();\n    onGestureCancel?.({ route: scene.route });\n  };\n\n  const handleGestureEnd = () => {\n    onGestureEnd?.({ route: scene.route });\n  };\n\n  const handleTransitionStart = ({ closing }: { closing: boolean }) => {\n    if (active && closing) {\n      onPageChangeConfirm?.();\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route: scene.route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] = React.useState<'box-none' | 'none'>(\n    'box-none'\n  );\n\n  React.useEffect(() => {\n    // @ts-expect-error: AnimatedInterpolation optionally has addListener, but the type defs don't think so\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        // @ts-expect-error: AnimatedInterpolation optionally has removedListener, but the type defs don't think so\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  const isCurrentHeaderShown = headerMode !== 'none' && headerShown !== false;\n  const previousScene = getPreviousScene({ route: scene.route });\n\n  return (\n    <Card\n      index={index}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlay={cardOverlay}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransitionStart={handleTransitionStart}\n      onGestureBegin={handleGestureBegin}\n      onGestureCanceled={handleGestureCanceled}\n      onGestureEnd={handleGestureEnd}\n      gestureEnabled={gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      pageOverflowEnabled={headerMode === 'screen' && mode === 'card'}\n      containerStyle={hasAbsoluteHeader ? { marginTop: headerHeight } : null}\n      contentStyle={[{ backgroundColor: colors.background }, cardStyle]}\n      style={[\n        {\n          // This is necessary to avoid unfocused larger pages increasing scroll area\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\n          overflow: active ? undefined : 'hidden',\n        },\n        StyleSheet.absoluteFill,\n      ]}\n    >\n      <View style={styles.container}>\n        <View style={styles.scene}>\n          <PreviousSceneContext.Provider value={previousScene}>\n            <HeaderShownContext.Provider\n              value={isParentHeaderShown || isCurrentHeaderShown}\n            >\n              <HeaderHeightContext.Provider value={headerHeight}>\n                {renderScene({ route: scene.route })}\n              </HeaderHeightContext.Provider>\n            </HeaderShownContext.Provider>\n          </PreviousSceneContext.Provider>\n        </View>\n        {headerMode === 'screen'\n          ? renderHeader({\n              mode: 'screen',\n              layout,\n              insets,\n              scenes: [previousScene, scene],\n              getPreviousScene,\n              getFocusedRoute,\n              gestureDirection,\n              styleInterpolator: headerStyleInterpolator,\n              onContentHeightChange: onHeaderHeightChange,\n            })\n          : null}\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}