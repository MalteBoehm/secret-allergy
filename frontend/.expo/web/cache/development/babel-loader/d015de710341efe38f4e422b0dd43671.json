{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/security/ProtectedRoute.js\";\nimport React, { useContext } from 'react';\nimport Navigator from \"../navigation/Navigator\";\nimport StackNavigator from \"../navigation/StackNavigator\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport AuthContext from \"../context/AuthContext\";\nexport default function ProtectedRoute(props) {\n  var _useContext = useContext(AuthContext),\n      tokenIsValid = _useContext.tokenIsValid;\n\n  return tokenIsValid() ? React.createElement(Navigator, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 29\n    }\n  })) : React.createElement(StackNavigator, {\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 55\n    }\n  });\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/security/ProtectedRoute.js"],"names":["React","useContext","Navigator","StackNavigator","LoginScreen","AuthContext","ProtectedRoute","props","tokenIsValid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,oBACjBN,UAAU,CAACI,WAAD,CADO;AAAA,MAClCG,YADkC,eAClCA,YADkC;;AAG1C,SAAOA,YAAY,KAAK,oBAAC,SAAD,eAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAL,GAA+B,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEH,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlD;AACH","sourcesContent":["import React, { useContext } from 'react';\nimport Navigator from \"../navigation/Navigator\";\nimport StackNavigator from \"../navigation/StackNavigator\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport AuthContext from '../context/AuthContext';\n\nexport default function ProtectedRoute(props) {\n    const { tokenIsValid } = useContext(AuthContext);\n\n    return tokenIsValid() ? <Navigator {...props}/> : <StackNavigator component={LoginScreen}/>;\n}\n"]},"metadata":{},"sourceType":"module"}