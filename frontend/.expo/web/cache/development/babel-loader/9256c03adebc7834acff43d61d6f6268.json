{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/LoginScreen/LoginForm.js\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AuthContext from \"../../context/AuthContext\";\nvar initialState = {\n  username: \"\",\n  password: \"\"\n};\nexport default function LoginForm() {\n  var _useContext = useContext(AuthContext),\n      loginWithUserCredentials = _useContext.loginWithUserCredentials;\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginData = _useState2[0],\n      setLoginData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(initialState.username),\n      _useState6 = _slicedToArray(_useState5, 2),\n      username = _useState6[0],\n      setUsername = _useState6[1];\n\n  var _useState7 = useState(initialState.password),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Username\",\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    onChange: handleChange,\n    leftIcon: React.createElement(Icon, {\n      name: \"user\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    value: password,\n    errorStyle: {\n      color: 'red'\n    },\n    errorMessage: \"password is wrong\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Login\",\n    buttonStyle: {\n      backgroundColor: '#3ca938'\n    },\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n\n  function handleSubmit(logindata) {\n    preventDefault();\n    loginWithUserCredentials(loginData).then(function () {\n      return history.push(\"/\");\n    }).catch(function () {\n      return setError(\"Unknown username or password.\");\n    });\n  }\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/LoginScreen/LoginForm.js"],"names":["React","useContext","useState","Input","Button","Icon","AuthContext","initialState","username","password","LoginForm","loginWithUserCredentials","loginData","setLoginData","error","setError","setUsername","setPassword","text","handleChange","color","backgroundColor","handleSubmit","logindata","preventDefault","then","history","push","catch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;;AAEA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,uBAA5B;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAIA,eAAe,SAASC,SAAT,GAAoB;AAAA,oBAEMT,UAAU,CAACK,WAAD,CAFhB;AAAA,MAEvBK,wBAFuB,eAEvBA,wBAFuB;;AAAA,kBAIGT,QAAQ,CAACK,YAAD,CAJX;AAAA;AAAA,MAIxBK,SAJwB;AAAA,MAIbC,YAJa;;AAAA,mBAKLX,QAAQ,CAAC,EAAD,CALH;AAAA;AAAA,MAKxBY,KALwB;AAAA,MAKjBC,QALiB;;AAAA,mBAMCb,QAAQ,CAACK,YAAY,CAACC,QAAd,CANT;AAAA;AAAA,MAMxBA,QANwB;AAAA,MAMdQ,WANc;;AAAA,mBAOCd,QAAQ,CAACK,YAAY,CAACE,QAAd,CAPT;AAAA;AAAA,MAOxBA,QAPwB;AAAA,MAOdQ,WAPc;;AAU/B,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,KAAK,EAAET,QAFX;AAGI,IAAA,YAAY,EAAE,sBAAAU,IAAI;AAAA,aAAIF,WAAW,CAACE,IAAD,CAAf;AAAA,KAHtB;AAII,IAAA,QAAQ,EAAEC,YAJd;AAKI,IAAA,QAAQ,EACJ,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,KAAK,EAAEV,QAFX;AAGI,IAAA,UAAU,EAAE;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAHhB;AAII,IAAA,YAAY,EAAC,mBAJjB;AAKI,IAAA,eAAe,EAAE,IALrB;AAMI,IAAA,YAAY,EAAE,sBAAAF,IAAI;AAAA,aAAID,WAAW,CAACC,IAAD,CAAf;AAAA,KANtB;AAOI,IAAA,QAAQ,EAAEC,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAuBI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,WAAW,EAAE;AAACE,MAAAA,eAAe,EAAC;AAAjB,KAFjB;AAGI,IAAA,OAAO,EAAEC,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CADJ;;AAiCA,WAASA,YAAT,CAAsBC,SAAtB,EAAiC;AAC7BC,IAAAA,cAAc;AACdb,IAAAA,wBAAwB,CAACC,SAAD,CAAxB,CACKa,IADL,CACU;AAAA,aAAMC,OAAO,CAACC,IAAR,CAAa,GAAb,CAAN;AAAA,KADV,EAEKC,KAFL,CAEW;AAAA,aAAMb,QAAQ,CAAC,+BAAD,CAAd;AAAA,KAFX;AAGH;AACJ","sourcesContent":["import React, {useContext, useState} from 'react';\nimport {View} from 'react-native';\nimport {Input, Button} from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport AuthContext from \"../../context/AuthContext\";\n\nconst initialState = {\n    username: \"\",\n    password: \"\",\n};\nexport default function LoginForm(){\n\n    const { loginWithUserCredentials } = useContext(AuthContext);\n\n    const [loginData, setLoginData] = useState(initialState);\n    const [error, setError] = useState(\"\");\n    const [username, setUsername] = useState(initialState.username);\n    const [password, setPassword] = useState(initialState.password);\n\n\n    return(\n        <View>\n            <Input\n                placeholder='Username'\n                value={username}\n                onChangeText={text => setUsername(text)}\n                onChange={handleChange}\n                leftIcon={\n                    <Icon\n                        name='user'\n                        size={24}\n                        color='black'\n                    />\n                }\n            />\n            <Input\n                placeholder='Password'\n                value={password}\n                errorStyle={{ color: 'red' }}\n                errorMessage='password is wrong'\n                secureTextEntry={true}\n                onChangeText={text => setPassword(text)}\n                onChange={handleChange}\n            />\n            <Button\n                title=\"Login\"\n                buttonStyle={{backgroundColor:'#3ca938'}}\n                onPress={handleSubmit}\n            />\n        </View>\n    );\n\n\n    function handleSubmit(logindata) {\n        preventDefault();\n        loginWithUserCredentials(loginData)\n            .then(() => history.push(\"/\"))\n            .catch(() => setError(\"Unknown username or password.\"));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}