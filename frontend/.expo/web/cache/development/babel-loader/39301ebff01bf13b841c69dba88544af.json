{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/DashboardList.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    background-color: white;\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    width:100%;\\n    min-height: \", \";\\n    backgroundColor: white;\\n\\n    marginLeft: \", \";\\n    margin-right: \", \";\\n    paddingLeft: \", \";\\n    paddingRight: \", \";\\n    padding-top: \", \";\\n    padding-bottom: \", \";\\n\\n    border-color: #a5a5a5;\\n    borderWidth: 1px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styled from 'styled-components/native';\nimport { moderateScale } from \"../styles/globalstyles\";\nimport Emoji from 'react-native-emoji';\nimport { useNavigation } from '@react-navigation/native';\n\nfunction ListItem(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    name: \"Omelet\",\n    ingredients: [\"Egg\", \"Milk\", \"Cheddar Cheese\"],\n    allergens: [\"Eggs\", \"Lactose\"],\n    sideEffects: {\n      hasSideEffect: true,\n      whichSideEffect: {\n        feelingState: 3,\n        headache: 2,\n        stomach: 3\n      },\n      sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentBreakfast = _useState2[0],\n      setCurrentBreakfast = _useState2[1];\n\n  var listItemsToMap = [{\n    id: 1,\n    title: 'Frühstück Hinzufügen',\n    emojiName: 'coffee',\n    state: 'currentBreakfast'\n  }, {\n    id: 2,\n    title: 'Mittagessen Hinzufügen',\n    emojiName: 'pizza',\n    state: 'currentBreakfast'\n  }, {\n    id: 3,\n    title: 'Abendessen Hinzufügen',\n    emojiName: 'coffee',\n    state: 'currentBreakfast'\n  }, {\n    id: 4,\n    title: 'Snack Hinzufügen',\n    emojiName: 'apple',\n    state: 'currentBreakfast'\n  }];\n\n  for (i = 0; 0 < listItemsToMap.length - 1; i++) {\n    var _currentBreakfast$all;\n\n    return React.createElement(MealBoxStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, React.createElement(Col, {\n      size: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 43\n      }\n    }, React.createElement(Emoji, {\n      name: \"coffee\",\n      style: {\n        fontSize: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 49\n      }\n    }))), React.createElement(Col, {\n      size: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: moderateScale(14, 0.3)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }\n    }, listItemsToMap[0].title, \" Hinzuf\\xFCgen\")), React.createElement(Col, {\n      size: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, React.createElement(Button, {\n      title: '+',\n      onPress: function onPress() {\n        return navigation.navigate('AddMeal');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }))), React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: moderateScale(12, 0.3)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }\n    }, currentBreakfast.name)), React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: moderateScale(12, 0.3)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 34\n      }\n    }, \"Nebenwirkung:\"))), React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, (_currentBreakfast$all = currentBreakfast.allergens) == null ? void 0 : _currentBreakfast$all.toString().replace(\",\", \", \"))), React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, \"Scale\")))));\n  }\n\n  var _useState3 = useState({\n    name: \"Pizza Salami\",\n    ingredients: [\"Egg\", \"Milk\", \"Cheddar Cheese\"],\n    allergens: [\"Gluten\", \"Lactose\", \"Histamin\"],\n    sideEffects: {\n      hasSideEffect: true,\n      whichSideEffect: {\n        feelingState: 3,\n        headache: 2,\n        stomach: 3\n      },\n      sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentMeal = _useState4[0],\n      setCurrentMeal = _useState4[1];\n\n  var _useState5 = useState({\n    name: \"Spinat mit Fischstäbchen\",\n    ingredients: [\"Seelachsfilet\", \"Panade\", \"Spinat\", \"Milch\"],\n    allergens: [\"Gluten\", \"Lactose\"],\n    sideEffects: {\n      hasSideEffect: true,\n      whichSideEffect: {\n        feelingState: 3,\n        headache: 2,\n        stomach: 3\n      },\n      sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentDinner = _useState6[0],\n      setCurrentDinner = _useState6[1];\n\n  var _useState7 = useState({\n    name: \"Apfel\",\n    ingredients: [\"Apfel\"],\n    allergens: [\"Fructose\"],\n    sideEffects: {\n      hasSideEffect: true,\n      whichSideEffect: {\n        feelingState: 3,\n        headache: 2,\n        stomach: 3\n      },\n      sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"\n    }\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentSnack = _useState8[0],\n      setCurrentSnack = _useState8[1];\n}\n\nexport default function DashboardList(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Row, {\n    size: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, React.createElement(Grid, {\n    style: GridListStyled.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, React.createElement(BreakfastBox, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  })), React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, React.createElement(MealBox, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  })), React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, React.createElement(DinnerBox, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  })), React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, React.createElement(SnackBox, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  })))));\n}\nvar GridListStyled = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    backgroundColor: '#8a92a35c'\n  }\n});\nvar MealBoxStyled = styled.View(_templateObject(), moderateScale(125, 0.3), moderateScale(5, 0.2), moderateScale(5, 0.2), moderateScale(7, 0.2), moderateScale(7, 0.2), moderateScale(7, 0.2), moderateScale(7, 0.2));\nvar MealBoxButtonStyled = styled.Button(_templateObject2());","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/DashboardList.js"],"names":["Grid","Row","Col","React","useState","styled","moderateScale","Emoji","useNavigation","ListItem","navigation","name","ingredients","allergens","sideEffects","hasSideEffect","whichSideEffect","feelingState","headache","stomach","sideEffectsNotes","currentBreakfast","setCurrentBreakfast","listItemsToMap","id","title","emojiName","state","i","length","fontSize","fontWeight","navigate","toString","replace","currentMeal","setCurrentMeal","currentDinner","setCurrentDinner","currentSnack","setCurrentSnack","DashboardList","GridListStyled","container","StyleSheet","create","flexDirection","backgroundColor","MealBoxStyled","View","MealBoxButtonStyled","Button"],"mappings":"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","sourcesContent":["import {Grid, Row, Col} from \"react-native-easy-grid\";\nimport React, {useState} from 'react';\nimport { StyleSheet, ScrollView, Text, View, Button} from 'react-native';\nimport styled from 'styled-components/native';\nimport {moderateScale} from '../styles/globalstyles';\nimport Emoji from 'react-native-emoji';\nimport { useNavigation } from '@react-navigation/native';\n\n\n\nfunction ListItem({ navigation }) {\n\n\n\n    const [currentBreakfast, setCurrentBreakfast] = useState({\n        name: \"Omelet\",\n        ingredients: [\"Egg\", \"Milk\", \"Cheddar Cheese\"],\n        allergens: [\"Eggs\",\"Lactose\"],\n        sideEffects: {hasSideEffect: true,\n            whichSideEffect: {feelingState:3, headache: 2, stomach: 3},\n            sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"}\n    });\n\n    const listItemsToMap = [\n        {\n            id: 1,\n            title: 'Frühstück Hinzufügen',\n            emojiName: 'coffee',\n            state: 'currentBreakfast'\n        },{\n            id: 2,\n            title: 'Mittagessen Hinzufügen',\n            emojiName: 'pizza',\n            state: 'currentBreakfast'\n        },{\n            id: 3,\n            title: 'Abendessen Hinzufügen',\n            emojiName: 'coffee',\n            state: 'currentBreakfast'\n        },{\n            id: 4,\n            title: 'Snack Hinzufügen',\n            emojiName: 'apple',\n            state: 'currentBreakfast'\n        },\n\n    ];\n\n\n\n        for (i = 0; 0<listItemsToMap.length-1; i++) {\n            return (\n                <MealBoxStyled>\n                    <Grid>\n                        <Row>\n                            <Col size={1}><Text><Emoji name=\"coffee\" style={{fontSize: 40}} /></Text></Col>\n                            <Col size={4}><Text style={{fontWeight: \"bold\", fontSize: moderateScale(14, 0.3)}}>{listItemsToMap[0].title} Hinzufügen</Text></Col>\n                            <Col size={1}>\n                                <Button title={'+'} onPress={() =>\n                                    navigation.navigate('AddMeal')}/>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col><Text style={{fontWeight: \"bold\", fontSize: moderateScale(12, 0.3)}}>{currentBreakfast.name}</Text></Col>\n                            <Col><Text style={{fontWeight: \"bold\", fontSize: moderateScale(12, 0.3)}}>Nebenwirkung:</Text></Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Text>\n                                    {currentBreakfast.allergens?.toString().replace(\",\", \", \")}\n                                </Text>\n                            </Col>\n                            <Col>\n                                <Text>\n                                    Scale\n                                </Text>\n                            </Col>\n                        </Row>\n                    </Grid>\n                </MealBoxStyled>);\n\n        }\n\n\n\n    const [currentMeal, setCurrentMeal] = useState({\n            name: \"Pizza Salami\",\n            ingredients: [\"Egg\", \"Milk\", \"Cheddar Cheese\"],\n            allergens: [\"Gluten\",\"Lactose\", \"Histamin\"],\n            sideEffects: {hasSideEffect: true,\n                whichSideEffect: {feelingState:3, headache: 2, stomach: 3},\n                sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"}\n        }\n    );\n\n\n    const [currentDinner, setCurrentDinner] = useState({\n            name: \"Spinat mit Fischstäbchen\",\n            ingredients: [\"Seelachsfilet\", \"Panade\", \"Spinat\", \"Milch\"],\n            allergens: [\"Gluten\",\"Lactose\"],\n            sideEffects: {hasSideEffect: true,\n                whichSideEffect: {feelingState:3, headache: 2, stomach: 3},\n                sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"}\n        }\n    );\n\n\n    const [currentSnack, setCurrentSnack] = useState({\n            name: \"Apfel\",\n            ingredients: [\"Apfel\"],\n            allergens: [\"Fructose\"],\n            sideEffects: {hasSideEffect: true,\n                whichSideEffect: {feelingState:3, headache: 2, stomach: 3},\n                sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"}\n        }\n    );\n\n}\n\n\nexport default function DashboardList({navigation}){\n        return(\n                <Row size={2}>\n                        <ScrollView>\n                            <Grid style={GridListStyled.container}>\n                                <Row>\n                                    <BreakfastBox navigation={navigation}/>\n                                </Row>\n                                <Row>\n                                    <MealBox navigation={navigation}/>\n                                </Row>\n                                <Row>\n                                    <DinnerBox navigation={navigation}/>\n                                </Row>\n                                <Row>\n                                    <SnackBox navigation={navigation}/>\n                                </Row>\n                            </Grid>\n                        </ScrollView>\n                </Row>\n\n        );\n}\n\n\nconst GridListStyled = StyleSheet.create({\n    container: {\n        flexDirection: 'column',\n        backgroundColor: '#8a92a35c'\n    }\n})\n\n\nconst MealBoxStyled = styled.View`\n    width:100%;\n    min-height: ${moderateScale(125, 0.3)};\n    backgroundColor: white;\n\n    marginLeft: ${moderateScale(5, 0.2)};\n    margin-right: ${moderateScale(5, 0.2)};\n    paddingLeft: ${moderateScale(7, 0.2)};\n    paddingRight: ${moderateScale(7, 0.2)};\n    padding-top: ${moderateScale(7, 0.2)};\n    padding-bottom: ${moderateScale(7, 0.2)};\n\n    border-color: #a5a5a5;\n    borderWidth: 1px;\n`\n\nconst MealBoxButtonStyled = styled.Button`\n    background-color: white;\n\n`\n\n\n// todo Farbscale\n\n\n\n\n// const imagesForMeals = [\n//     {\n//         text: \"Frühstück\",\n//         image: sourceImage(require),\n//     },\n//     {\n//         text: \"Mittag\",\n//         image: sourceImage(require),\n//     },\n// ];\n"]},"metadata":{},"sourceType":"module"}