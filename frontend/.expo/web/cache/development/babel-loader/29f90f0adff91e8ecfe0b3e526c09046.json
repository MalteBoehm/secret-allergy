{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nexport var loadTokenFromLocalStorage = function loadTokenFromLocalStorage() {\n  try {\n    var value = JSON.parse(AsyncStorage.getItem('ACCESS_TOKEN'));\n    console.log(value + \" Value of loadTokenFromLocalStorage function\");\n\n    if (value !== null) {\n      return value;\n    }\n  } catch (e) {\n    console.log('Error loading token from local storage');\n  }\n};\nexport var saveTokenToLocalStorage = function saveTokenToLocalStorage(token) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function saveTokenToLocalStorage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          jsonValue = JSON.stringify(token);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('ACCESS_TOKEN', jsonValue));\n\n        case 4:\n          console.log(jsonValue + \" saveTokenToLocalStorage function\");\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('Error saving token to local storage');\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var loadUserDataFromLocalStorage = function loadUserDataFromLocalStorage() {\n  var jsonValue;\n  return _regeneratorRuntime.async(function loadUserDataFromLocalStorage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"USER_DATA\"));\n\n        case 3:\n          jsonValue = _context2.sent;\n          console.log(jsonValue + \" loadUserDataFromLocalStorage function\");\n          return _context2.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('Error loading user data from local storage');\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var saveUserDataToLocalStorage = function saveUserDataToLocalStorage(userData) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function saveUserDataToLocalStorage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          jsonValue = JSON.stringify(userData);\n          console.log(jsonValue + \" saveUserDataToLocalStorage function\");\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"USER_DATA\", jsonValue));\n\n        case 5:\n          _context3.next = 10;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log('Error saving user data to local storage');\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var deleteTokenFromLocalStorage = function deleteTokenFromLocalStorage() {\n  return _regeneratorRuntime.async(function deleteTokenFromLocalStorage$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"ACCESS_TOKEN\"));\n\n        case 3:\n          _context4.next = 8;\n          break;\n\n        case 5:\n          _context4.prev = 5;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log('Error deleting token from local storage');\n\n        case 8:\n          console.log('Removed.');\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/service/AsyncStorage.js"],"names":["AsyncStorage","useContext","AuthContext","loadTokenFromLocalStorage","value","JSON","parse","getItem","console","log","e","saveTokenToLocalStorage","token","jsonValue","stringify","setItem","loadUserDataFromLocalStorage","saveUserDataToLocalStorage","userData","deleteTokenFromLocalStorage","removeItem"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,WAAP;AAIA,OAAO,IAAMC,yBAAyB,GAAK,SAA9BA,yBAA8B,GAAM;AAC7C,MAAI;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAYN,YAAY,CAACO,OAAb,CAAqB,cAArB,CAAZ,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,GAAG,8CAApB;;AACA,QAAGA,KAAK,KAAK,IAAb,EAAmB;AACf,aAAOA,KAAP;AACH;AACJ,GAND,CAME,OAAMM,CAAN,EAAS;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACH;AACJ,CAVM;AAaP,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzBC,UAAAA,SAFyB,GAEbR,IAAI,CAACS,SAAL,CAAeF,KAAf,CAFa;AAAA;AAAA,2CAGzBZ,YAAY,CAACe,OAAb,CAAqB,cAArB,EAAqCF,SAArC,CAHyB;;AAAA;AAI/BL,UAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,GAAI,mCAAzB;AAJ+B;AAAA;;AAAA;AAAA;AAAA;AAM/BL,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;;AAN+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;AAWP,OAAO,IAAMO,4BAA4B,GAAG,SAA/BA,4BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEZhB,YAAY,CAACO,OAAb,CAAqB,WAArB,CAFY;;AAAA;AAE9BM,UAAAA,SAF8B;AAGpCL,UAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,GAAI,wCAAzB;AAHoC,4CAI7BA,SAAS,IAAI,IAAb,GAAoBR,IAAI,CAACC,KAAL,CAAWO,SAAX,CAApB,GAA4C,IAJf;;AAAA;AAAA;AAAA;AAMpCL,UAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;;AANoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC;AAWP,OAAO,IAAMQ,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5BL,UAAAA,SAF4B,GAEhBR,IAAI,CAACS,SAAL,CAAeI,QAAf,CAFgB;AAGlCV,UAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,GAAG,sCAAxB;AAHkC;AAAA,2CAI5Bb,YAAY,CAACe,OAAb,CAAqB,WAArB,EAAkCF,SAAlC,CAJ4B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMlCL,UAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;;AANkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnC;AAWP,OAAO,IAAMU,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAE7BnB,YAAY,CAACoB,UAAb,CAAwB,cAAxB,CAF6B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAInCZ,UAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;;AAJmC;AAMvCD,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AANuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApC","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport {useContext} from \"react\";\nimport AuthContext from \"../context/AuthContext\";\n\n\n\nexport const loadTokenFromLocalStorage  =  () => {\n    try {\n        const value = JSON.parse( AsyncStorage.getItem('ACCESS_TOKEN'))\n        console.log(value + \" Value of loadTokenFromLocalStorage function\")\n        if(value !== null) {\n            return value;\n        }\n    } catch(e) {\n        console.log('Error loading token from local storage')\n    }\n}\n\n\nexport const saveTokenToLocalStorage = async (token) => {\n    try {\n        const jsonValue = JSON.stringify(token)\n        await AsyncStorage.setItem('ACCESS_TOKEN', jsonValue)\n        console.log(jsonValue  + \" saveTokenToLocalStorage function\")\n    } catch (e) {\n        console.log('Error saving token to local storage')\n    }\n}\n\n\nexport const loadUserDataFromLocalStorage = async () => {\n    try {\n        const jsonValue = await AsyncStorage.getItem(\"USER_DATA\")\n        console.log(jsonValue  + \" loadUserDataFromLocalStorage function\")\n        return jsonValue != null ? JSON.parse(jsonValue) : null;\n    } catch(e) {\n        console.log('Error loading user data from local storage')\n    }\n}\n\n\nexport const saveUserDataToLocalStorage = async (userData) => {\n    try {\n        const jsonValue = JSON.stringify(userData)\n        console.log(jsonValue + \" saveUserDataToLocalStorage function\")\n        await AsyncStorage.setItem(\"USER_DATA\", jsonValue)\n    } catch (e) {\n        console.log('Error saving user data to local storage')\n    }\n}\n\n\nexport const deleteTokenFromLocalStorage = async () => {\n    try {\n        await AsyncStorage.removeItem(\"ACCESS_TOKEN\")\n    } catch(e) {\n        console.log('Error deleting token from local storage')\n    }\n    console.log('Removed.')\n}\n"]},"metadata":{},"sourceType":"module"}