{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/DashboardList.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    background-color: white;\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    width:100%;\\n    min-height: \", \";\\n    backgroundColor: white;\\n\\n    marginLeft: \", \";\\n    margin-right: \", \";\\n    paddingLeft: \", \";\\n    paddingRight: \", \";\\n    padding-top: \", \";\\n    padding-bottom: \", \";\\n\\n    border-color: #a5a5a5;\\n    borderWidth: 1px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styled from 'styled-components/native';\nimport { moderateScale } from \"../styles/globalstyles\";\nimport Emoji from 'react-native-emoji';\nimport { useNavigation } from '@react-navigation/native';\nexport default function DashboardList(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var listItemsToMap = [{\n    id: 1,\n    title: 'Frühstück Hinzufügen',\n    emojiName: 'coffee',\n    state: 'currentBreakfast'\n  }, {\n    id: 2,\n    title: 'Mittagessen Hinzufügen',\n    emojiName: 'pizza',\n    state: 'currentBreakfast'\n  }, {\n    id: 3,\n    title: 'Abendessen Hinzufügen',\n    emojiName: 'coffee',\n    state: 'currentBreakfast'\n  }, {\n    id: 4,\n    title: 'Snack Hinzufügen',\n    emojiName: 'apple',\n    state: 'currentBreakfast'\n  }];\n\n  var _useState = useState({\n    name: \"Omelet\",\n    ingredients: [\"Egg\", \"Milk\", \"Cheddar Cheese\"],\n    allergens: [\"Eggs\", \"Lactose\"],\n    sideEffects: {\n      hasSideEffect: true,\n      whichSideEffect: {\n        feelingState: 3,\n        headache: 2,\n        stomach: 3\n      },\n      sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentBreakfast = _useState2[0],\n      setCurrentBreakfast = _useState2[1];\n\n  var _useState3 = useState({\n    name: \"Pizza Salami\",\n    ingredients: [\"Egg\", \"Milk\", \"Cheddar Cheese\"],\n    allergens: [\"Gluten\", \"Lactose\", \"Histamin\"],\n    sideEffects: {\n      hasSideEffect: true,\n      whichSideEffect: {\n        feelingState: 3,\n        headache: 2,\n        stomach: 3\n      },\n      sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentMeal = _useState4[0],\n      setCurrentMeal = _useState4[1];\n\n  var _useState5 = useState({\n    name: \"Spinat mit Fischstäbchen\",\n    ingredients: [\"Seelachsfilet\", \"Panade\", \"Spinat\", \"Milch\"],\n    allergens: [\"Gluten\", \"Lactose\"],\n    sideEffects: {\n      hasSideEffect: true,\n      whichSideEffect: {\n        feelingState: 3,\n        headache: 2,\n        stomach: 3\n      },\n      sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentDinner = _useState6[0],\n      setCurrentDinner = _useState6[1];\n\n  var _useState7 = useState({\n    name: \"Apfel\",\n    ingredients: [\"Apfel\"],\n    allergens: [\"Fructose\"],\n    sideEffects: {\n      hasSideEffect: true,\n      whichSideEffect: {\n        feelingState: 3,\n        headache: 2,\n        stomach: 3\n      },\n      sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"\n    }\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentSnack = _useState8[0],\n      setCurrentSnack = _useState8[1];\n\n  return React.createElement(Row, {\n    size: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, React.createElement(Grid, {\n    style: GridListStyled.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, listItemsToMap.map(function (item) {\n    var _item$state$allergens;\n\n    return React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, React.createElement(MealBoxStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    }, React.createElement(Grid, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 49\n      }\n    }, React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 53\n      }\n    }, React.createElement(Col, {\n      size: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 57\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 71\n      }\n    }, React.createElement(Emoji, {\n      name: item.emojiName,\n      style: {\n        fontSize: 40\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 77\n      }\n    }))), React.createElement(Col, {\n      size: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 57\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: moderateScale(14, 0.3)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 71\n      }\n    }, item.title)), React.createElement(Col, {\n      size: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 57\n      }\n    }, React.createElement(Button, {\n      title: '+',\n      onPress: function onPress() {\n        return navigation.navigate('AddMeal');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 61\n      }\n    }))), React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 53\n      }\n    }, React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 57\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: moderateScale(12, 0.3)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 62\n      }\n    }, item.state)), React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 57\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: moderateScale(12, 0.3)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 62\n      }\n    }, \"Nebenwirkung:\"))), React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 53\n      }\n    }, React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 57\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 61\n      }\n    }, (_item$state$allergens = item.state.allergens) == null ? void 0 : _item$state$allergens.toString().replace(\",\", \", \"))), React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 57\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 61\n      }\n    }, \"Scale\"))))));\n  }))));\n}\nvar GridListStyled = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    backgroundColor: '#8a92a35c'\n  }\n});\nvar MealBoxStyled = styled.View(_templateObject(), moderateScale(125, 0.3), moderateScale(5, 0.2), moderateScale(5, 0.2), moderateScale(7, 0.2), moderateScale(7, 0.2), moderateScale(7, 0.2), moderateScale(7, 0.2));\nvar MealBoxButtonStyled = styled.Button(_templateObject2());","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/DashboardList.js"],"names":["Grid","Row","Col","React","useState","styled","moderateScale","Emoji","useNavigation","DashboardList","navigation","listItemsToMap","id","title","emojiName","state","name","ingredients","allergens","sideEffects","hasSideEffect","whichSideEffect","feelingState","headache","stomach","sideEffectsNotes","currentBreakfast","setCurrentBreakfast","currentMeal","setCurrentMeal","currentDinner","setCurrentDinner","currentSnack","setCurrentSnack","GridListStyled","container","map","item","fontSize","fontWeight","navigate","toString","replace","StyleSheet","create","flexDirection","backgroundColor","MealBoxStyled","View","MealBoxButtonStyled","Button"],"mappings":"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","sourcesContent":["import {Grid, Row, Col} from \"react-native-easy-grid\";\nimport React, {useState} from 'react';\nimport { StyleSheet, ScrollView, Text, View, Button} from 'react-native';\nimport styled from 'styled-components/native';\nimport {moderateScale} from '../styles/globalstyles';\nimport Emoji from 'react-native-emoji';\nimport { useNavigation } from '@react-navigation/native';\n\n\nexport default function DashboardList({navigation}){\n    const listItemsToMap = [\n        {\n            id: 1,\n            title: 'Frühstück Hinzufügen',\n            emojiName: 'coffee',\n            state: 'currentBreakfast'\n        },{\n            id: 2,\n            title: 'Mittagessen Hinzufügen',\n            emojiName: 'pizza',\n            state: 'currentBreakfast'\n        },{\n            id: 3,\n            title: 'Abendessen Hinzufügen',\n            emojiName: 'coffee',\n            state: 'currentBreakfast'\n        },{\n            id: 4,\n            title: 'Snack Hinzufügen',\n            emojiName: 'apple',\n            state: 'currentBreakfast'\n        }];\n\n\n    const [currentBreakfast, setCurrentBreakfast] = useState({\n        name: \"Omelet\",\n        ingredients: [\"Egg\", \"Milk\", \"Cheddar Cheese\"],\n        allergens: [\"Eggs\",\"Lactose\"],\n        sideEffects: {hasSideEffect: true,\n            whichSideEffect: {feelingState:3, headache: 2, stomach: 3},\n            sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"}\n    });\n\n\n    const [currentMeal, setCurrentMeal] = useState({\n            name: \"Pizza Salami\",\n            ingredients: [\"Egg\", \"Milk\", \"Cheddar Cheese\"],\n            allergens: [\"Gluten\",\"Lactose\", \"Histamin\"],\n            sideEffects: {hasSideEffect: true,\n                whichSideEffect: {feelingState:3, headache: 2, stomach: 3},\n                sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"}\n        }\n    );\n\n\n    const [currentDinner, setCurrentDinner] = useState({\n            name: \"Spinat mit Fischstäbchen\",\n            ingredients: [\"Seelachsfilet\", \"Panade\", \"Spinat\", \"Milch\"],\n            allergens: [\"Gluten\",\"Lactose\"],\n            sideEffects: {hasSideEffect: true,\n                whichSideEffect: {feelingState:3, headache: 2, stomach: 3},\n                sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"}\n        }\n    );\n\n\n    const [currentSnack, setCurrentSnack] = useState({\n            name: \"Apfel\",\n            ingredients: [\"Apfel\"],\n            allergens: [\"Fructose\"],\n            sideEffects: {hasSideEffect: true,\n                whichSideEffect: {feelingState:3, headache: 2, stomach: 3},\n                sideEffectsNotes: \"Ich habe mich unwohl gefühlt und dazu Kopfschmerzen bekommen. Auch mein Margen spielte verrückt.\"}\n        }\n    );\n\n        return(\n                <Row size={2}>\n                        <ScrollView>\n                            <Grid style={GridListStyled.container}>\n                                {listItemsToMap.map(item => {\n                                    return(\n                                        <Row>\n                                            <MealBoxStyled>\n                                                <Grid>\n                                                    <Row>\n                                                        <Col size={1}><Text><Emoji name={item.emojiName} style={{fontSize: 40}}/></Text></Col>\n                                                        <Col size={4}><Text style={{fontWeight: \"bold\", fontSize: moderateScale(14, 0.3)}}>{item.title}</Text></Col>\n                                                        <Col size={1}>\n                                                            <Button title={'+'} onPress={() =>\n                                                                navigation.navigate('AddMeal')}/>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col><Text style={{fontWeight: \"bold\", fontSize: moderateScale(12, 0.3)}}>{item.state}</Text></Col>\n                                                        <Col><Text style={{fontWeight: \"bold\", fontSize: moderateScale(12, 0.3)}}>Nebenwirkung:</Text></Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Text>\n                                                                {item.state.allergens?.toString().replace(\",\", \", \")}\n                                                            </Text>\n                                                        </Col>\n                                                        <Col>\n                                                            <Text>\n                                                                Scale\n                                                            </Text>\n                                                        </Col>\n                                                    </Row>\n                                                </Grid>\n                                            </MealBoxStyled>\n                                        </Row>\n                                    );\n                                })}\n\n                            </Grid>\n                        </ScrollView>\n                </Row>\n\n        );\n}\n\n\nconst GridListStyled = StyleSheet.create({\n    container: {\n        flexDirection: 'column',\n        backgroundColor: '#8a92a35c'\n    }\n})\n\n\nconst MealBoxStyled = styled.View`\n    width:100%;\n    min-height: ${moderateScale(125, 0.3)};\n    backgroundColor: white;\n\n    marginLeft: ${moderateScale(5, 0.2)};\n    margin-right: ${moderateScale(5, 0.2)};\n    paddingLeft: ${moderateScale(7, 0.2)};\n    paddingRight: ${moderateScale(7, 0.2)};\n    padding-top: ${moderateScale(7, 0.2)};\n    padding-bottom: ${moderateScale(7, 0.2)};\n\n    border-color: #a5a5a5;\n    borderWidth: 1px;\n`\n\nconst MealBoxButtonStyled = styled.Button`\n    background-color: white;\n\n`\n\n\n// todo Farbscale\n\n\n\n\n// const imagesForMeals = [\n//     {\n//         text: \"Frühstück\",\n//         image: sourceImage(require),\n//     },\n//     {\n//         text: \"Mittag\",\n//         image: sourceImage(require),\n//     },\n// ];\n"]},"metadata":{},"sourceType":"module"}