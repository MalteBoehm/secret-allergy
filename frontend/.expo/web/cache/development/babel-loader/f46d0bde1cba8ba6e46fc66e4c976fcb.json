{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/LoginScreen/ActivityIndicatorAuthentication.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport { loadTokenFromLocalStorage } from \"../../service/AsyncStorage\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function ActivityIndicatorAuthentication() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      token = _useContext.token,\n      setToken = _useContext.setToken;\n\n  useEffect(function () {\n    setTimeout(function () {\n      if (token === null) {\n        loadTokenFromLocalStorage().then(function (value) {\n          setToken(value);\n          console.log(value + \" LoginScreen\");\n        });\n      }\n\n      setIsLoading(false);\n    }, 2000);\n  }, []);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/LoginScreen/ActivityIndicatorAuthentication.js"],"names":["React","useContext","useEffect","useState","AuthContext","loadTokenFromLocalStorage","ActivityIndicatorAuthentication","isLoading","setIsLoading","token","setToken","setTimeout","then","value","console","log","flex","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,WAAP;AACA,SAAQC,yBAAR;;;AAIA,eAAe,SAASC,+BAAT,GAA0C;AAAA,kBACvBH,QAAQ,CAAC,IAAD,CADe;AAAA;AAAA,MAClDI,SADkD;AAAA,MACvCC,YADuC;;AAAA,oBAE7BP,UAAU,CAACG,WAAD,CAFmB;AAAA,MAEjDK,KAFiD,eAEjDA,KAFiD;AAAA,MAE1CC,QAF0C,eAE1CA,QAF0C;;AAIzDR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,UAAU,CAAC,YAAM;AACb,UAAGF,KAAK,KAAK,IAAb,EAAkB;AACdJ,QAAAA,yBAAyB,GACzBO,IADA,CACK,UAAAC,KAAK,EAAG;AACTH,UAAAA,QAAQ,CAACG,KAAD,CAAR;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,GAAG,cAApB;AACH,SAJD;AAKH;;AACDL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KATS,EASP,IATO,CAAV;AAUH,GAXQ,EAWN,EAXM,CAAT;;AAYA,MAAID,SAAJ,EAAe;AACX,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTS,QAAAA,IAAI,EAAE,CADG;AAETC,QAAAA,cAAc,EAAE,QAFP;AAGTC,QAAAA,UAAU,EAAE;AAHH,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AASG;AAEN","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport {loadTokenFromLocalStorage} from \"../../service/AsyncStorage\";\nimport {ActivityIndicator, View} from \"react-native\";\n\n\nexport default function ActivityIndicatorAuthentication(){\nconst [isLoading, setIsLoading] = useState(true)\nconst { token, setToken } = useContext(AuthContext);\n\nuseEffect(() => {\n    setTimeout(() => {\n        if(token === null){\n            loadTokenFromLocalStorage().\n            then(value=> {\n                setToken(value);\n                console.log(value + \" LoginScreen\")\n            });\n        }\n        setIsLoading(false);\n    }, 2000)\n}, []);\nif (isLoading) {\n    return (\n        <View style={{\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n        }}\n        >\n            <ActivityIndicator size='large'/>\n        </View>\n    );}\n\n}\n"]},"metadata":{},"sourceType":"module"}