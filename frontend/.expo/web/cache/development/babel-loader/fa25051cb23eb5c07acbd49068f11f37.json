{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/AddMealList.js\";\nimport React, { useState } from 'react';\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport search from \"./AddMealSuche\";\nexport default function AddMealList() {\n  var _this = this;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      createdMeal = _useState2[0],\n      setCreatedMeal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var API_ENDPOINT = 'https://randomuser.me/api/?seed=1&page=1&results=20';\n  useEffect(function () {\n    setIsLoading(true);\n    fetch(API_ENDPOINT).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      setData(results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err);\n    });\n  }, []);\n  return React.createElement(Row, {\n    size: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Basic FlatList Example\"), React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.listItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.listItemText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }, item.title));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f8f8',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    color: '#101010',\n    marginTop: 60,\n    fontWeight: '700'\n  },\n  listItem: {\n    marginTop: 10,\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    width: '100%'\n  },\n  listItemText: {\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/AddMealList.js"],"names":["React","useState","Grid","Row","Col","search","AddMealList","createdMeal","setCreatedMeal","isLoading","setIsLoading","data","setData","error","setError","API_ENDPOINT","useEffect","fetch","then","response","json","results","catch","err","styles","container","text","item","id","listItem","listItemText","title","StyleSheet","create","flex","backgroundColor","alignItems","fontSize","color","marginTop","fontWeight","padding","width"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Grid, Row, Col} from \"react-native-easy-grid\";\nimport { StyleSheet, ScrollView, Text, View, FlatList} from 'react-native';\nimport search from './AddMealSuche'\n\n\nexport default function AddMealList() {\n\n    const [createdMeal, setCreatedMeal] = useState({\n\n    })\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [error, setError] = useState(null);\n\n    const API_ENDPOINT = 'https://randomuser.me/api/?seed=1&page=1&results=20';\n    useEffect(() => {\n        setIsLoading(true);\n\n        fetch(API_ENDPOINT)\n            .then(response => response.json())\n            .then(results => {\n                setData(results);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setError(err);\n            });\n    }, []);\n\n    return (\n\n            <Row size={10}>\n                <View style={styles.container}>\n                    <Text style={styles.text}>Basic FlatList Example</Text>\n                    <FlatList\n                        data={data}\n                        keyExtractor={item => item.id}\n                        renderItem={({ item }) => (\n                            <View style={styles.listItem}>\n                                <Text style={styles.listItemText}>{item.title}</Text>\n                            </View>\n                        )}\n                    />\n                </View>\n\n            </Row>\n\n\n    )\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f8f8f8',\n        alignItems: 'center'\n    },\n    text: {\n        fontSize: 20,\n        color: '#101010',\n        marginTop: 60,\n        fontWeight: '700'\n    },\n    listItem: {\n        marginTop: 10,\n        padding: 20,\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        width: '100%'\n    },\n    listItemText: {\n        fontSize: 18\n    }\n});\n"]},"metadata":{},"sourceType":"module"}