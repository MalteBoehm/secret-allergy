{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/screens/LoginScreen.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LoginHeader from \"../components/LoginScreen/LoginHeader\";\nimport LoginForm from \"../components/LoginScreen/LoginForm\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn() {\n        setUserToken(\"sample-user-token\");\n        setIsLoading(false);\n      },\n      signOut: function signOut() {\n        setUserToken(null);\n        setIsLoading(false);\n      },\n      signUp: function signUp() {\n        setUserToken(\"sample-user-token\");\n        setIsLoading(false);\n      }\n    };\n  });\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(LoginHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/screens/LoginScreen.js"],"names":["React","useEffect","useMemo","useState","LoginHeader","LoginForm","LoginScreen","navigation","isLoading","setIsLoading","userToken","setUserToken","setTimeout","authContext","signIn","signOut","signUp","flex","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,EAAmCC,QAAnC,QAAkD,OAAlD;;;AAEA,OAAOC,WAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,WAAT,OAAqC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAAA,kBAEdJ,QAAQ,CAAC,IAAD,CAFM;AAAA;AAAA,MAEzCK,SAFyC;AAAA,MAE9BC,YAF8B;;AAAA,mBAGdN,QAAQ,CAAC,IAAD,CAHM;AAAA;AAAA,MAGzCO,SAHyC;AAAA,MAG9BC,YAH8B;;AAKhDV,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,UAAU,CAAC,YAAM;AACbH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,EAJM,CAAT;AAQA,MAAMI,WAAW,GAAGX,OAAO,CAAC;AAAA,WAAM;AAC9BY,MAAAA,MAAM,EAAE,kBAAM;AACVH,QAAAA,YAAY,CAAC,mBAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAJ6B;AAK9BM,MAAAA,OAAO,EAAE,mBAAM;AACXJ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAR6B;AAS9BO,MAAAA,MAAM,EAAE,kBAAM;AACVL,QAAAA,YAAY,CAAC,mBAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AAZ6B,KAAN;AAAA,GAAD,CAA3B;;AAgBA,MAAKD,SAAL,EAAiB;AACb,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACDS,QAAAA,IAAI,EAAC,CADJ;AAEDC,QAAAA,cAAc,EAAE,QAFf;AAGDC,QAAAA,UAAU,EAAE;AAHX,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AACD,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\nimport {ActivityIndicator, View} from 'react-native';\nimport LoginHeader from \"../components/LoginScreen/LoginHeader\";\nimport LoginForm from \"../components/LoginScreen/LoginForm\";\n\nexport default function LoginScreen ({ navigation }){\n\n    const [isLoading, setIsLoading] = useState(true)\n    const [userToken, setUserToken] = useState(null);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 1000)\n    }, []);\n\n\n    \n    const authContext = useMemo(()=> ({\n        signIn: () => {\n            setUserToken(\"sample-user-token\");\n            setIsLoading(false);\n        },\n        signOut: () => {\n            setUserToken(null);\n            setIsLoading(false)\n        },\n        signUp: () => {\n            setUserToken(\"sample-user-token\");\n            setIsLoading(false);\n        }\n    })\n   );\n\n    if ( isLoading ) {\n        return(\n            <View style={{\n                        flex:1,\n                        justifyContent: 'center',\n                        alignItems: 'center'}}\n            >\n                <ActivityIndicator size='large'/>\n            </View>\n        )\n    }\n    return(\n        <View>\n            <LoginHeader/>\n            <LoginForm/>\n        </View>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}