{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/context/AuthContextProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport AuthContext from \"./AuthContext\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { loadTokenFromLocalStorage, saveTokenToLocalStorage, loadUserDataFromLocalStorage, saveUserDataToLocalStorage, deleteTokenFromLocalStorage } from \"../service/AsyncStorage\";\nexport default function _callee(_ref) {\n  var children, _useState, _useState2, token, setToken, _useState3, _useState4, userData, setUserData, tokenIsValid, loginWithUserCredentials, logout;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          children = _ref.children;\n          _context.t0 = useState;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(loadTokenFromLocalStorage());\n\n        case 4:\n          _context.t1 = _context.sent;\n          _useState = (0, _context.t0)(_context.t1);\n          _useState2 = _slicedToArray(_useState, 2);\n          token = _useState2[0];\n          setToken = _useState2[1];\n          _useState3 = useState(loadUserDataFromLocalStorage()), _useState4 = _slicedToArray(_useState3, 2), userData = _useState4[0], setUserData = _useState4[1];\n          console.log(token);\n          useEffect(function () {\n            if (token) {\n              try {\n                var decoded = jwtDecode(token);\n                console.log(decoded + \" value of decoded token\");\n\n                if (decoded.exp > new Date().getTime() / 1000) {\n                  setUserData(decoded);\n                  saveTokenToLocalStorage(token);\n                  saveUserDataToLocalStorage(decoded);\n                }\n              } catch (e) {\n                console.log(e);\n              }\n            }\n          }, [token]);\n\n          tokenIsValid = function tokenIsValid() {\n            return token && (userData == null ? void 0 : userData.exp) > new Date().getTime() / 1000;\n          };\n\n          loginWithUserCredentials = function loginWithUserCredentials(loginData) {\n            return axios.post('http://192.168.178.76:8080/auth/login', loginData).then(function (response) {\n              return setToken(response.data);\n            });\n          };\n\n          logout = function logout() {\n            return deleteTokenFromLocalStorage();\n          };\n\n          return _context.abrupt(\"return\", React.createElement(AuthContext.Provider, {\n            value: {\n              token: token,\n              setToken: setToken,\n              logout: logout,\n              tokenIsValid: tokenIsValid,\n              loginWithUserCredentials: loginWithUserCredentials,\n              userData: userData\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }\n          }, children));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, this, null, Promise);\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/context/AuthContextProvider.js"],"names":["React","useEffect","useState","AuthContext","axios","jwtDecode","loadTokenFromLocalStorage","saveTokenToLocalStorage","loadUserDataFromLocalStorage","saveUserDataToLocalStorage","deleteTokenFromLocalStorage","children","token","setToken","userData","setUserData","console","log","decoded","exp","Date","getTime","e","tokenIsValid","loginWithUserCredentials","loginData","post","then","response","data","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,yBADJ,EAEIC,uBAFJ,EAGIC,4BAHJ,EAIIC,0BAJJ,EAKIC,2BALJ;AASA,eAAe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAkBC,UAAAA,QAAlB,QAAkBA,QAAlB;AAAA,wBACgBT,QADhB;AAAA;AAAA,2CAC+BI,yBAAyB,EADxD;;AAAA;AAAA;AAAA;AAAA;AACHM,UAAAA,KADG;AACIC,UAAAA,QADJ;AAAA,uBAEqBX,QAAQ,CAACM,4BAA4B,EAA7B,CAF7B,8CAEJM,QAFI,kBAEMC,WAFN;AAGXC,UAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEAX,UAAAA,SAAS,CAAC,YAAM;AACZ,gBAAIW,KAAJ,EAAW;AACP,kBAAI;AACA,oBAAMM,OAAO,GAAGb,SAAS,CAACO,KAAD,CAAzB;AACAI,gBAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,GAAG,yBAAtB;;AACA,oBAAIA,OAAO,CAACC,GAAR,GAAc,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAzC,EAA+C;AAC3CN,kBAAAA,WAAW,CAACG,OAAD,CAAX;AACAX,kBAAAA,uBAAuB,CAACK,KAAD,CAAvB;AACAH,kBAAAA,0BAA0B,CAACS,OAAD,CAA1B;AACH;AACJ,eARD,CAQE,OAAOI,CAAP,EAAU;AACRN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACH;AACJ;AACJ,WAdQ,EAcN,CAACV,KAAD,CAdM,CAAT;;AAgBMW,UAAAA,YArBK,GAqBU,SAAfA,YAAe;AAAA,mBACjBX,KAAK,IAAI,CAAAE,QAAQ,QAAR,YAAAA,QAAQ,CAAEK,GAAV,IAAgB,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAD/B;AAAA,WArBV;;AAwBLG,UAAAA,wBAxBK,GAwBsB,SAA3BA,wBAA2B,CAACC,SAAD;AAAA,mBAC7BrB,KAAK,CACAsB,IADL,CACU,uCADV,EACmDD,SADnD,EAEKE,IAFL,CAEU,UAACC,QAAD;AAAA,qBAAcf,QAAQ,CAACe,QAAQ,CAACC,IAAV,CAAtB;AAAA,aAFV,CAD6B;AAAA,WAxBtB;;AA6BLC,UAAAA,MA7BK,GA6BI,SAATA,MAAS;AAAA,mBACXpB,2BAA2B,EADhB;AAAA,WA7BJ;;AAAA,2CAiCP,oBAAC,WAAD,CAAa,QAAb;AACI,YAAA,KAAK,EAAE;AACHE,cAAAA,KAAK,EAALA,KADG;AAEHC,cAAAA,QAAQ,EAARA,QAFG;AAGHiB,cAAAA,MAAM,EAANA,MAHG;AAIHP,cAAAA,YAAY,EAAZA,YAJG;AAKHC,cAAAA,wBAAwB,EAAxBA,wBALG;AAMHV,cAAAA,QAAQ,EAARA;AANG,aADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAUKH,QAVL,CAjCO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport {\n    loadTokenFromLocalStorage ,\n    saveTokenToLocalStorage,\n    loadUserDataFromLocalStorage,\n    saveUserDataToLocalStorage,\n    deleteTokenFromLocalStorage\n    } from '../service/AsyncStorage';\n\n\nexport default async function ({ children }){\n    const  [token, setToken] = useState(await loadTokenFromLocalStorage());\n    const [userData, setUserData] = useState(loadUserDataFromLocalStorage());\n    console.log(token)\n\n    useEffect(() => {\n        if (token) {\n            try {\n                const decoded = jwtDecode(token);\n                console.log(decoded + \" value of decoded token\")\n                if (decoded.exp > new Date().getTime() / 1000) {\n                    setUserData(decoded);\n                    saveTokenToLocalStorage(token);\n                    saveUserDataToLocalStorage(decoded);\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    }, [token]);\n\n    const tokenIsValid = () =>\n        token && userData?.exp > new Date().getTime() / 1000;\n\n    const loginWithUserCredentials = (loginData) =>\n        axios\n            .post('http://192.168.178.76:8080/auth/login', loginData)\n            .then((response) => setToken(response.data));\n\n    const logout = () =>\n        deleteTokenFromLocalStorage();\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                setToken,\n                logout,\n                tokenIsValid,\n                loginWithUserCredentials,\n                userData,\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}