{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nexport var loadTokenFromLocalStorage = function loadTokenFromLocalStorage() {\n  var _useContext, setToken;\n\n  return _regeneratorRuntime.async(function loadTokenFromLocalStorage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _useContext = useContext(AuthContext), setToken = _useContext.setToken;\n          _context.prev = 1;\n          AsyncStorage.getItem('ACCESS_TOKEN').then(function (value) {\n            setToken(value);\n          });\n          console.log(value + \" Value of loadTokenFromLocalStorage function\");\n\n          if (!value) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", value);\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log('Error loading token from local storage');\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var saveTokenToLocalStorage = function saveTokenToLocalStorage(token) {\n  var tokenValue;\n  return _regeneratorRuntime.async(function saveTokenToLocalStorage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          tokenValue = JSON.stringify(token);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('ACCESS_TOKEN', tokenValue));\n\n        case 4:\n          console.log(tokenValue + \" saveTokenToLocalStorage function\");\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('Error saving token to local storage');\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var loadUserDataFromLocalStorage = function loadUserDataFromLocalStorage() {\n  var _useContext2, setUser, jsonValue;\n\n  return _regeneratorRuntime.async(function loadUserDataFromLocalStorage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _useContext2 = useContext(AuthContext), setUser = _useContext2.setUser;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"USER_DATA\"));\n\n        case 4:\n          jsonValue = _context3.sent;\n          console.log(jsonValue + \" loadUserDataFromLocalStorage function\");\n          return _context3.abrupt(\"return\", jsonValue != null ? setUser(JSON.parse(jsonValue)) : null);\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.log('Error loading user data from local storage');\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var saveUserDataToLocalStorage = function saveUserDataToLocalStorage(userData) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function saveUserDataToLocalStorage$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          jsonValue = JSON.stringify(userData);\n          console.log(jsonValue + \" saveUserDataToLocalStorage function\");\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('USER_DATA', jsonValue));\n\n        case 5:\n          _context4.next = 10;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log('Error saving user data to local storage');\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var deleteTokenFromLocalStorage = function deleteTokenFromLocalStorage() {\n  return _regeneratorRuntime.async(function deleteTokenFromLocalStorage$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"ACCESS_TOKEN\"));\n\n        case 3:\n          _context5.next = 8;\n          break;\n\n        case 5:\n          _context5.prev = 5;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log('Error deleting token from local storage');\n\n        case 8:\n          console.log('Removed.');\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/service/AsyncStorage.js"],"names":["AsyncStorage","useContext","AuthContext","loadTokenFromLocalStorage","setToken","getItem","then","value","console","log","saveTokenToLocalStorage","token","tokenValue","JSON","stringify","setItem","loadUserDataFromLocalStorage","setUser","jsonValue","parse","saveUserDataToLocalStorage","userData","deleteTokenFromLocalStorage","removeItem"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport {useContext} from \"react\";\nimport AuthContext from \"../context/AuthContext\";\n\n\n\nexport const loadTokenFromLocalStorage  = async () => {\n    const { setToken } = useContext(AuthContext);\n    try {\n        AsyncStorage.getItem('ACCESS_TOKEN').then((value)=> {\n            setToken(value)\n        })\n        console.log(value + \" Value of loadTokenFromLocalStorage function\")\n        if(value ) {\n            return value;\n        }\n    } catch(e) {\n        console.log('Error loading token from local storage')\n    }\n}\n\n\nexport const saveTokenToLocalStorage = async (token) => {\n    try {\n        const tokenValue = JSON.stringify(token);\n        await AsyncStorage.setItem('ACCESS_TOKEN', tokenValue)\n        console.log(tokenValue  + \" saveTokenToLocalStorage function\")\n    } catch (e) {\n        console.log('Error saving token to local storage')\n    }\n}\n\n\nexport const loadUserDataFromLocalStorage = async () => {\n    const { setUser } = useContext(AuthContext);\n    try {\n        const jsonValue = await AsyncStorage.getItem(\"USER_DATA\")\n        console.log(jsonValue  + \" loadUserDataFromLocalStorage function\")\n        return jsonValue != null ? setUser(JSON.parse(jsonValue)) : null;\n    } catch(e) {\n        console.log('Error loading user data from local storage')\n    }\n}\n\n\nexport const saveUserDataToLocalStorage = async (userData) => {\n    try {\n        const jsonValue = JSON.stringify(userData)\n        console.log(jsonValue + \" saveUserDataToLocalStorage function\")\n        await AsyncStorage.setItem('USER_DATA', jsonValue)\n    } catch (e) {\n        console.log('Error saving user data to local storage')\n    }\n}\n\n\nexport const deleteTokenFromLocalStorage = async () => {\n    try {\n        await AsyncStorage.removeItem(\"ACCESS_TOKEN\")\n    } catch(e) {\n        console.log('Error deleting token from local storage')\n    }\n    console.log('Removed.')\n}\n"]},"metadata":{},"sourceType":"module"}