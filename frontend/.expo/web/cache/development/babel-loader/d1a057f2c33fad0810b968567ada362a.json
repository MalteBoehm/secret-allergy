{"ast":null,"code":"var _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/node_modules/react-native-screens/src/native-stack/views/HeaderConfig.tsx\";\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { ScreenStackHeaderBackButtonImage, ScreenStackHeaderCenterView, ScreenStackHeaderConfig, ScreenStackHeaderLeftView, ScreenStackHeaderRightView } from 'react-native-screens';\nexport default function HeaderConfig(_ref) {\n  var route = _ref.route,\n      title = _ref.title,\n      headerRight = _ref.headerRight,\n      headerLeft = _ref.headerLeft,\n      headerCenter = _ref.headerCenter,\n      headerTitle = _ref.headerTitle,\n      headerBackTitle = _ref.headerBackTitle,\n      _ref$headerBackTitleV = _ref.headerBackTitleVisible,\n      headerBackTitleVisible = _ref$headerBackTitleV === void 0 ? true : _ref$headerBackTitleV,\n      backButtonImage = _ref.backButtonImage,\n      headerHideBackButton = _ref.headerHideBackButton,\n      headerHideShadow = _ref.headerHideShadow,\n      headerLargeTitleHideShadow = _ref.headerLargeTitleHideShadow,\n      headerTintColor = _ref.headerTintColor,\n      _ref$headerTopInsetEn = _ref.headerTopInsetEnabled,\n      headerTopInsetEnabled = _ref$headerTopInsetEn === void 0 ? true : _ref$headerTopInsetEn,\n      headerLargeTitle = _ref.headerLargeTitle,\n      headerTranslucent = _ref.headerTranslucent,\n      _ref$headerStyle = _ref.headerStyle,\n      headerStyle = _ref$headerStyle === void 0 ? {} : _ref$headerStyle,\n      _ref$headerLargeStyle = _ref.headerLargeStyle,\n      headerLargeStyle = _ref$headerLargeStyle === void 0 ? {} : _ref$headerLargeStyle,\n      _ref$headerTitleStyle = _ref.headerTitleStyle,\n      headerTitleStyle = _ref$headerTitleStyle === void 0 ? {} : _ref$headerTitleStyle,\n      _ref$headerLargeTitle = _ref.headerLargeTitleStyle,\n      headerLargeTitleStyle = _ref$headerLargeTitle === void 0 ? {} : _ref$headerLargeTitle,\n      _ref$headerBackTitleS = _ref.headerBackTitleStyle,\n      headerBackTitleStyle = _ref$headerBackTitleS === void 0 ? {} : _ref$headerBackTitleS,\n      headerShown = _ref.headerShown,\n      backButtonInCustomView = _ref.backButtonInCustomView;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var tintColor = headerTintColor != null ? headerTintColor : colors.primary;\n  return React.createElement(ScreenStackHeaderConfig, {\n    backButtonInCustomView: backButtonInCustomView,\n    backgroundColor: headerStyle.backgroundColor ? headerStyle.backgroundColor : colors.card,\n    backTitle: headerBackTitleVisible ? headerBackTitle : ' ',\n    backTitleFontFamily: headerBackTitleStyle.fontFamily,\n    backTitleFontSize: headerBackTitleStyle.fontSize,\n    blurEffect: headerStyle.blurEffect,\n    color: tintColor,\n    hidden: headerShown === false,\n    hideBackButton: headerHideBackButton,\n    hideShadow: headerHideShadow,\n    largeTitle: headerLargeTitle,\n    largeTitleBackgroundColor: headerLargeStyle.backgroundColor,\n    largeTitleColor: headerLargeTitleStyle.color,\n    largeTitleFontFamily: headerLargeTitleStyle.fontFamily,\n    largeTitleFontSize: headerLargeTitleStyle.fontSize,\n    largeTitleHideShadow: headerLargeTitleHideShadow,\n    title: headerTitle !== undefined ? headerTitle : title !== undefined ? title : route.name,\n    titleColor: headerTitleStyle.color !== undefined ? headerTitleStyle.color : headerTintColor !== undefined ? headerTintColor : colors.text,\n    titleFontFamily: headerTitleStyle.fontFamily,\n    titleFontSize: headerTitleStyle.fontSize,\n    topInsetEnabled: headerTopInsetEnabled,\n    translucent: headerTranslucent === true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, headerRight !== undefined ? React.createElement(ScreenStackHeaderRightView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, headerRight({\n    tintColor: tintColor\n  })) : null, backButtonImage !== undefined ? React.createElement(ScreenStackHeaderBackButtonImage, {\n    key: \"backImage\",\n    source: backButtonImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }) : null, headerLeft !== undefined ? React.createElement(ScreenStackHeaderLeftView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, headerLeft({\n    tintColor: tintColor\n  })) : null, headerCenter !== undefined ? React.createElement(ScreenStackHeaderCenterView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, headerCenter({\n    tintColor: tintColor\n  })) : null);\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/node_modules/react-native-screens/src/native-stack/views/HeaderConfig.tsx"],"names":["useTheme","React","ScreenStackHeaderBackButtonImage","ScreenStackHeaderCenterView","ScreenStackHeaderConfig","ScreenStackHeaderLeftView","ScreenStackHeaderRightView","HeaderConfig","route","title","headerRight","headerLeft","headerCenter","headerTitle","headerBackTitle","headerBackTitleVisible","backButtonImage","headerHideBackButton","headerHideShadow","headerLargeTitleHideShadow","headerTintColor","headerTopInsetEnabled","headerLargeTitle","headerTranslucent","headerStyle","headerLargeStyle","headerTitleStyle","headerLargeTitleStyle","headerBackTitleStyle","headerShown","backButtonInCustomView","colors","tintColor","primary","backgroundColor","card","fontFamily","fontSize","blurEffect","color","undefined","name","text"],"mappings":"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","sourcesContent":["import { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n} from 'react-native-screens';\nimport { NativeStackNavigationOptions } from '../types';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig({\n  route,\n  title,\n  headerRight,\n  headerLeft,\n  headerCenter,\n  headerTitle,\n  headerBackTitle,\n  headerBackTitleVisible = true,\n  backButtonImage,\n  headerHideBackButton,\n  headerHideShadow,\n  headerLargeTitleHideShadow,\n  headerTintColor,\n  headerTopInsetEnabled = true,\n  headerLargeTitle,\n  headerTranslucent,\n  headerStyle = {},\n  headerLargeStyle = {},\n  headerTitleStyle = {},\n  headerLargeTitleStyle = {},\n  headerBackTitleStyle = {},\n  headerShown,\n  backButtonInCustomView,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor = headerTintColor ?? colors.primary;\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyle.backgroundColor ? headerStyle.backgroundColor : colors.card\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={headerBackTitleStyle.fontFamily}\n      backTitleFontSize={headerBackTitleStyle.fontSize}\n      blurEffect={headerStyle.blurEffect}\n      color={tintColor}\n      hidden={headerShown === false}\n      hideBackButton={headerHideBackButton}\n      hideShadow={headerHideShadow}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyle.backgroundColor}\n      largeTitleColor={headerLargeTitleStyle.color}\n      largeTitleFontFamily={headerLargeTitleStyle.fontFamily}\n      largeTitleFontSize={headerLargeTitleStyle.fontSize}\n      largeTitleHideShadow={headerLargeTitleHideShadow}\n      title={\n        headerTitle !== undefined\n          ? headerTitle\n          : title !== undefined\n          ? title\n          : route.name\n      }\n      titleColor={\n        headerTitleStyle.color !== undefined\n          ? headerTitleStyle.color\n          : headerTintColor !== undefined\n          ? headerTintColor\n          : colors.text\n      }\n      titleFontFamily={headerTitleStyle.fontFamily}\n      titleFontSize={headerTitleStyle.fontSize}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={headerTranslucent === true}>\n      {headerRight !== undefined ? (\n        <ScreenStackHeaderRightView>\n          {headerRight({ tintColor })}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {backButtonImage !== undefined ? (\n        <ScreenStackHeaderBackButtonImage\n          key=\"backImage\"\n          source={backButtonImage}\n        />\n      ) : null}\n      {headerLeft !== undefined ? (\n        <ScreenStackHeaderLeftView>\n          {headerLeft({ tintColor })}\n        </ScreenStackHeaderLeftView>\n      ) : null}\n      {headerCenter !== undefined ? (\n        <ScreenStackHeaderCenterView>\n          {headerCenter({ tintColor })}\n        </ScreenStackHeaderCenterView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}