{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/AddMealList.js\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport { ListItem, SearchBar } from 'react-native-elements';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return React.createElement(View, {\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, title));\n};\n\nimport LiveSearchContext from \"../context/LiveSearchContext\";\nimport AddMealHeader from \"./AddMealHeader\";\nexport default function AddMealList() {\n  var _this2 = this;\n\n  var _useContext = useContext(LiveSearchContext),\n      liveSearchData = _useContext.liveSearchData;\n\n  return React.createElement(Row, {\n    size: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: liveSearchData,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        roundAvatar: true,\n        title: \"\" + item.product_name,\n        subtitle: item.email,\n        avatar: {\n          uri: item.image_front_thumb_url\n        },\n        containerStyle: {\n          borderBottomWidth: 0\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.email;\n    },\n    ItemSeparatorComponent: renderSeparator,\n    ListHeaderComponent: AddMealHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f8f8f8',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    color: '#101010',\n    marginTop: 60,\n    fontWeight: '700'\n  },\n  listItem: {\n    marginTop: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    backgroundColor: '#fff',\n    flexDirection: 'row'\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8\n  },\n  metaInfo: {\n    marginLeft: 10\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10\n  }\n});\n\nvar renderSeparator = function renderSeparator() {\n  return React.createElement(View, {\n    style: {\n      height: 1,\n      width: '86%',\n      backgroundColor: '#CED0CE',\n      marginLeft: '14%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  });\n};\n\nvar searchFilterFunction = function searchFilterFunction(text) {\n  _this.setState({\n    value: text\n  });\n\n  var newData = arrayholder.filter(function (item) {\n    var itemData = item.name.title.toUpperCase() + \" \" + item.name.first.toUpperCase() + \" \" + item.name.last.toUpperCase();\n    var textData = text.toUpperCase();\n    return itemData.indexOf(textData) > -1;\n  });\n\n  _this.setState({\n    data: newData\n  });\n};","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/AddMealList.js"],"names":["React","useContext","useEffect","useState","Grid","Row","Col","ListItem","SearchBar","Item","title","styles","item","LiveSearchContext","AddMealHeader","AddMealList","liveSearchData","product_name","email","uri","image_front_thumb_url","borderBottomWidth","renderSeparator","StyleSheet","create","container","backgroundColor","alignItems","text","fontSize","color","marginTop","fontWeight","listItem","paddingVertical","paddingHorizontal","flexDirection","coverImage","width","height","borderRadius","metaInfo","marginLeft","padding","searchFilterFunction","setState","value","newData","arrayholder","filter","itemData","name","toUpperCase","first","last","textData","indexOf","data"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {Grid, Row, Col} from \"react-native-easy-grid\";\nimport { ListItem, SearchBar } from 'react-native-elements';\nimport {\n    StyleSheet,\n    Text,\n    View,\n    FlatList,\n    ActivityIndicator,\n    Image\n} from 'react-native';\n\nconst Item = ({ title }) => (\n    <View style={styles.item}>\n        <Text style={styles.title}>{title}</Text>\n    </View>\n);\n\nimport LiveSearchContext from \"../context/LiveSearchContext\";\nimport AddMealHeader from \"./AddMealHeader\";\n\nexport default function AddMealList() {\n\n    const {liveSearchData} = useContext(LiveSearchContext);\n\n    return (\n        <Row size={7}>\n                <FlatList\n                    data={liveSearchData}\n                    renderItem={({ item }) => (\n                        <ListItem\n                            roundAvatar\n                            title={`${item.product_name}`}\n                            subtitle={item.email}\n                            avatar={{ uri: item.image_front_thumb_url }}\n                            containerStyle={{ borderBottomWidth: 0 }}\n                        />\n                    )}\n                    keyExtractor={item => item.email}\n                    ItemSeparatorComponent={renderSeparator}\n                    ListHeaderComponent={AddMealHeader}\n                />\n\n        </Row>\n    )\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#f8f8f8',\n        alignItems: 'center'\n    },\n    text: {\n        fontSize: 20,\n        color: '#101010',\n        marginTop: 60,\n        fontWeight: '700'\n    },\n    listItem: {\n        marginTop: 10,\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        backgroundColor: '#fff',\n        flexDirection: 'row'\n    },\n    coverImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 8\n    },\n    metaInfo: {\n        marginLeft: 10\n    },\n    title: {\n        fontSize: 18,\n        width: 200,\n        padding: 10\n    }\n});\n\nconst renderSeparator = () => {\n    return (\n        <View\n            style={{\n                height: 1,\n                width: '86%',\n                backgroundColor: '#CED0CE',\n                marginLeft: '14%',\n            }}\n        />\n    );\n};\n\nconst searchFilterFunction = text => {\n    this.setState({\n        value: text,\n    });\n\n    const newData = arrayholder.filter(item => {\n        const itemData = `${item.name.title.toUpperCase()} ${item.name.first.toUpperCase()} ${item.name.last.toUpperCase()}`;\n        const textData = text.toUpperCase();\n\n        return itemData.indexOf(textData) > -1;\n    });\n    this.setState({\n        data: newData,\n    });\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}