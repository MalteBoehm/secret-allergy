{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/navigation/Navigator.js\";\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport DashboardScreen from \"../screens/DashboardScreen\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport LoginScreen from \"../screens/LoginScreen\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nvar Tab = createMaterialBottomTabNavigator();\nexport default function Navigator() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn() {\n        setUserToken(\"sampletoken\");\n        setIsLoading(false);\n      },\n      signOut: function signOut() {\n        setUserToken(null);\n        setIsLoading(false);\n      },\n      signUp: function signUp() {\n        setUserToken(\"sampletoken\");\n        setIsLoading(false);\n      }\n    };\n  });\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"// todo switch component back to DashboardScreen when loginscreen is read\", React.createElement(Tab.Navigator, {\n    activeColor: \"#f0edf6\",\n    inactiveColor: \"#3e2435\",\n    barStyle: {\n      backgroundColor: '#646ea0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: LoginScreen,\n    options: {\n      tabBarLabel: 'Home',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: 25,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Tagebuch\",\n    component: DashboardScreen,\n    options: {\n      tabBarLabel: 'Tagebuch',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"book-open\",\n          color: color,\n          size: 25,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: DashboardScreen,\n    options: {\n      tabBarLabel: 'Settings',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: 25,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/navigation/Navigator.js"],"names":["React","useEffect","useMemo","useState","DashboardScreen","MaterialCommunityIcons","NavigationContainer","createMaterialBottomTabNavigator","LoginScreen","AuthContext","Tab","Navigator","isLoading","setIsLoading","userToken","setUserToken","setTimeout","authContext","signIn","signOut","signUp","flex","justifyContent","alignItems","backgroundColor","tabBarLabel","tabBarIcon","color"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, {useEffect, useMemo, useState} from 'react';\nimport DashboardScreen from '../screens/DashboardScreen';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {NavigationContainer} from '@react-navigation/native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport LoginScreen from \"../screens/LoginScreen\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {ActivityIndicator, View} from \"react-native\";\n\n\nconst Tab = createMaterialBottomTabNavigator();\n\n\nexport default function Navigator() {\n\n\n\n    const [isLoading, setIsLoading] = useState(true)\n    const [userToken, setUserToken] = useState(null);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 1000)\n    }, []);\n\n\n    const authContext = useMemo(()=> ({\n        signIn: () => {\n            setUserToken(\"sampletoken\");\n            setIsLoading(false);\n        },\n        signOut: () => {\n            setUserToken(null);\n            setIsLoading(false)\n        },\n        signUp: () => {\n            setUserToken(\"sampletoken\");\n            setIsLoading(false);\n        },\n    }));\n\n    if ( isLoading ) {\n        return(\n            <View style={{\n                flex:1,\n                justifyContent: 'center',\n                alignItems: 'center'}}\n            >\n                <ActivityIndicator size='large'/>\n            </View>\n        )\n    }\n\n    return (\n       <AuthContext.Provider value={authContext}>\n            <NavigationContainer>\n                // todo switch component back to DashboardScreen when loginscreen is read\n                <Tab.Navigator  activeColor='#f0edf6'\n                                inactiveColor='#3e2435'\n                                barStyle={{ backgroundColor: '#646ea0'}}>\n                    <Tab.Screen name=\"Home\" component={LoginScreen} options={{\n                        tabBarLabel: 'Home',\n                        tabBarIcon: ({ color }) => (\n                            <MaterialCommunityIcons name=\"home\" color={color} size={25} />\n                        ),\n                    }}/>\n                    <Tab.Screen name=\"Tagebuch\" component={DashboardScreen} options={{\n                        tabBarLabel: 'Tagebuch',\n                        tabBarIcon: ({ color }) => (\n                            <MaterialCommunityIcons name=\"book-open\" color={color} size={25} />\n                        ),\n                    }}/>\n                    <Tab.Screen name=\"Settings\" component={DashboardScreen} options={{\n                        tabBarLabel: 'Settings',\n                        tabBarIcon: ({ color }) => (\n                            <MaterialCommunityIcons name=\"home\" color={color} size={25} />\n                        ),\n                    }}/>\n                </Tab.Navigator>\n            </NavigationContainer>\n       </AuthContext.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}