{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/AddMealList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport axios from 'axios';\nexport default function AddMealList() {\n  var _this = this;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      createdMeal = _useState2[0],\n      setCreatedMeal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var API_ENDPOINT = '';\n  useEffect(function () {\n    setIsLoading(true);\n    axios.get(\"http://localhost:8080/api/product?products=gustavo Pizza Margherita\").then(function (response) {\n      setData(response.data);\n    });\n  }, []);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#5500dc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (error) {\n    return React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Error fetching data... Check your network connection!\"));\n  }\n\n  return React.createElement(Row, {\n    size: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Favorite Contacts\"), React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.first;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.listItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: styles.metaInfo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }, item.name + \" \" + item.name.last)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f8f8f8',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    color: '#101010',\n    marginTop: 60,\n    fontWeight: '700'\n  },\n  listItem: {\n    marginTop: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    backgroundColor: '#fff',\n    flexDirection: 'row'\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8\n  },\n  metaInfo: {\n    marginLeft: 10\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/AddMealList.js"],"names":["React","useEffect","useState","Grid","Row","Col","axios","AddMealList","createdMeal","setCreatedMeal","isLoading","setIsLoading","data","setData","error","setError","API_ENDPOINT","get","then","response","justifyContent","alignItems","fontSize","styles","container","text","item","first","listItem","metaInfo","title","name","last","StyleSheet","create","backgroundColor","color","marginTop","fontWeight","paddingVertical","paddingHorizontal","flexDirection","coverImage","width","height","borderRadius","marginLeft","padding"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Grid, Row, Col} from \"react-native-easy-grid\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    FlatList,\n    ActivityIndicator,\n    Image\n} from 'react-native';\nimport axios from 'axios';\n\n\nexport default function AddMealList() {\n\n    const [createdMeal, setCreatedMeal] = useState({\n\n    })\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [error, setError] = useState(null);\n    \n    const API_ENDPOINT = '';\n    useEffect(() => {\n        setIsLoading(true);\n        axios.get(\"http://localhost:8080/api/product?products=gustavo Pizza Margherita\")\n            .then(response => {\n            setData(response.data)\n        });\n    }, []);\n\n    if (isLoading) {\n        return (\n            <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                <ActivityIndicator size=\"large\" color=\"#5500dc\" />\n            </View>\n        );\n    }\n\n    if (error) {\n        return (\n            <View style={{  justifyContent: 'center', alignItems: 'center' }}>\n                <Text style={{ fontSize: 18}}>\n                    Error fetching data... Check your network connection!\n                </Text>\n            </View>\n        );\n    }\n\n    return (\n        <Row size={7}>\n                <View style={styles.container}>\n                    <Text style={styles.text}>Favorite Contacts</Text>\n                    <FlatList\n                        data={data}\n                        keyExtractor={item => item.first}\n                        renderItem={({ item }) => (\n                            <View style={styles.listItem}>\n                                <View style={styles.metaInfo}>\n                                    <Text style={styles.title}>{`${item.name} ${\n                                        item.name.last\n                                    }`}</Text>\n                                </View>\n                            </View>\n                        )}\n                    />\n                </View>\n        </Row>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#f8f8f8',\n        alignItems: 'center'\n    },\n    text: {\n        fontSize: 20,\n        color: '#101010',\n        marginTop: 60,\n        fontWeight: '700'\n    },\n    listItem: {\n        marginTop: 10,\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        backgroundColor: '#fff',\n        flexDirection: 'row'\n    },\n    coverImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 8\n    },\n    metaInfo: {\n        marginLeft: 10\n    },\n    title: {\n        fontSize: 18,\n        width: 200,\n        padding: 10\n    }\n});\n"]},"metadata":{},"sourceType":"module"}