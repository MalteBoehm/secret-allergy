{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/AddMealList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport axios from 'axios';\nexport default function AddMealList() {\n  var _this = this;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      createdMeal = _useState2[0],\n      setCreatedMeal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var API_ENDPOINT = '';\n  useEffect(function () {\n    setIsLoading(true);\n    axios.get(\"http://localhost:8080/api/product?products=gustavo Pizza Margherita\").then(function (response) {\n      console.log(response.data);\n      setData(response.data);\n    });\n  }, []);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#5500dc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (error) {\n    return React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Error fetching data... Check your network connection!\"));\n  }\n\n  return React.createElement(Row, {\n    size: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(List, {\n    containerStyle: {\n      borderTopWidth: 0,\n      borderBottomWidth: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: this.state.data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        roundAvatar: true,\n        title: item.name.first + \" \" + item.name.last,\n        subtitle: item.email,\n        avatar: {\n          uri: item.picture.thumbnail\n        },\n        containerStyle: {\n          borderBottomWidth: 0\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.email;\n    },\n    ItemSeparatorComponent: this.renderSeparator,\n    ListHeaderComponent: this.renderHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f8f8f8',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    color: '#101010',\n    marginTop: 60,\n    fontWeight: '700'\n  },\n  listItem: {\n    marginTop: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    backgroundColor: '#fff',\n    flexDirection: 'row'\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8\n  },\n  metaInfo: {\n    marginLeft: 10\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/AddMealList.js"],"names":["React","useEffect","useState","Grid","Row","Col","axios","AddMealList","createdMeal","setCreatedMeal","isLoading","setIsLoading","data","setData","error","setError","API_ENDPOINT","get","then","response","console","log","justifyContent","alignItems","fontSize","borderTopWidth","borderBottomWidth","state","item","name","first","last","email","uri","picture","thumbnail","renderSeparator","renderHeader","styles","StyleSheet","create","container","backgroundColor","text","color","marginTop","fontWeight","listItem","paddingVertical","paddingHorizontal","flexDirection","coverImage","width","height","borderRadius","metaInfo","marginLeft","title","padding"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Grid, Row, Col} from \"react-native-easy-grid\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    FlatList,\n    ActivityIndicator,\n    Image\n} from 'react-native';\nimport axios from 'axios';\n\n\nexport default function AddMealList() {\n\n    const [createdMeal, setCreatedMeal] = useState({\n\n    })\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [error, setError] = useState(null);\n\n    const API_ENDPOINT = '';\n    useEffect(() => {\n        setIsLoading(true);\n        axios.get(\"http://localhost:8080/api/product?products=gustavo Pizza Margherita\")\n            .then((response) =>{\n            console.log(response.data)\n            setData(response.data)}\n        );\n    }, []);\n    if (isLoading) {\n        return (\n            <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                <ActivityIndicator size=\"large\" color=\"#5500dc\" />\n            </View>\n        );\n    }\n\n    if (error) {\n        return (\n            <View style={{  justifyContent: 'center', alignItems: 'center' }}>\n                <Text style={{ fontSize: 18}}>\n                    Error fetching data... Check your network connection!\n                </Text>\n            </View>\n        );\n    }\n\n    return (\n        <Row size={7}>\n            <List containerStyle={{ borderTopWidth: 0, borderBottomWidth: 0 }}>\n                <FlatList\n                    data={this.state.data}\n                    renderItem={({ item }) => (\n                        <ListItem\n                            roundAvatar\n                            title={`${item.name.first} ${item.name.last}`}\n                            subtitle={item.email}\n                            avatar={{ uri: item.picture.thumbnail }}\n                            containerStyle={{ borderBottomWidth: 0 }}\n                        />\n                    )}\n                    keyExtractor={item => item.email}\n                    ItemSeparatorComponent={this.renderSeparator}\n                    ListHeaderComponent={this.renderHeader}\n                />\n            </List>\n        </Row>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#f8f8f8',\n        alignItems: 'center'\n    },\n    text: {\n        fontSize: 20,\n        color: '#101010',\n        marginTop: 60,\n        fontWeight: '700'\n    },\n    listItem: {\n        marginTop: 10,\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        backgroundColor: '#fff',\n        flexDirection: 'row'\n    },\n    coverImage: {\n        width: 100,\n        height: 100,\n        borderRadius: 8\n    },\n    metaInfo: {\n        marginLeft: 10\n    },\n    title: {\n        fontSize: 18,\n        width: 200,\n        padding: 10\n    }\n});\n"]},"metadata":{},"sourceType":"module"}