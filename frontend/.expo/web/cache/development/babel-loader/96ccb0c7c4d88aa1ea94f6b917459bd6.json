{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/screens/LoginScreen.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport LoginHeader from \"../components/LoginScreen/LoginHeader\";\nimport LoginForm from \"../components/LoginScreen/LoginForm\";\nimport AuthContext from \"../context/AuthContext\";\nimport { loadTokenFromLocalStorage, saveTokenToLocalStorage, loadUserDataFromLocalStorage, saveUserDataToLocalStorage, deleteTokenFromLocalStorage } from \"../service/AsyncStorage\";\nexport default function LoginScreen() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      token = _useContext.token,\n      setToken = _useContext.setToken;\n\n  useEffect(function () {\n    if (token === null) {\n      loadTokenFromLocalStorage().then(function (value) {\n        setToken(value);\n        console.log(value + \" LoginScreen\");\n      });\n    }\n\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 2000);\n  }, []);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(LoginHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/screens/LoginScreen.js"],"names":["React","useContext","useEffect","useState","LoginHeader","LoginForm","AuthContext","loadTokenFromLocalStorage","saveTokenToLocalStorage","loadUserDataFromLocalStorage","saveUserDataToLocalStorage","deleteTokenFromLocalStorage","LoginScreen","isLoading","setIsLoading","token","setToken","then","value","console","log","setTimeout","flex","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;;;AAEA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,SACIC,yBADJ,EAEIC,uBAFJ,EAGIC,4BAHJ,EAIIC,0BAJJ,EAKIC,2BALJ;AAQA,eAAe,SAASC,WAAT,GAAwB;AAAA,kBAEDT,QAAQ,CAAC,IAAD,CAFP;AAAA;AAAA,MAE5BU,SAF4B;AAAA,MAEjBC,YAFiB;;AAAA,oBAIPb,UAAU,CAACK,WAAD,CAJH;AAAA,MAI3BS,KAJ2B,eAI3BA,KAJ2B;AAAA,MAIpBC,QAJoB,eAIpBA,QAJoB;;AAMnCd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGa,KAAK,KAAK,IAAb,EAAkB;AACdR,MAAAA,yBAAyB,GACzBU,IADA,CACK,UAAAC,KAAK,EAAG;AACLF,QAAAA,QAAQ,CAACE,KAAD,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,GAAG,cAApB;AACH,OAJL;AAKH;;AACDG,IAAAA,UAAU,CAAC,YAAM;AACbP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAXQ,EAWN,EAXM,CAAT;;AAcA,MAAID,SAAJ,EAAe;AACX,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTS,QAAAA,IAAI,EAAE,CADG;AAETC,QAAAA,cAAc,EAAE,QAFP;AAGTC,QAAAA,UAAU,EAAE;AAHH,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AASG;;AAEP,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {View, ActivityIndicator} from 'react-native';\nimport LoginHeader from \"../components/LoginScreen/LoginHeader\";\nimport LoginForm from \"../components/LoginScreen/LoginForm\";\nimport AuthContext from \"../context/AuthContext\";\nimport {\n    loadTokenFromLocalStorage ,\n    saveTokenToLocalStorage,\n    loadUserDataFromLocalStorage,\n    saveUserDataToLocalStorage,\n    deleteTokenFromLocalStorage\n} from '../service/AsyncStorage';\n\nexport default function LoginScreen () {\n\n    const [isLoading, setIsLoading] = useState(true)\n\n    const { token, setToken } = useContext(AuthContext);\n\n    useEffect(() => {\n        if(token === null){\n            loadTokenFromLocalStorage().\n            then(value=> {\n                    setToken(value)\n                    console.log(value + \" LoginScreen\")\n                });\n        }\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 2000)\n    }, []);\n\n\n    if (isLoading) {\n        return (\n            <View style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center'\n            }}\n            >\n                <ActivityIndicator size='large'/>\n            </View>\n        );}\n\n    return (\n        <View>\n            <LoginHeader/>\n            <LoginForm/>\n        </View>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}