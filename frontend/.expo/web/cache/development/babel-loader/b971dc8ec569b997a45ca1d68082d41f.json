{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/LoginScreen/LoginForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AuthContext from \"../../context/AuthContext\";\nvar initialState = {\n  username: \"\",\n  password: \"\"\n};\nexport default function LoginForm() {\n  var _useContext = useContext(AuthContext),\n      loginWithUserCredentials = _useContext.loginWithUserCredentials;\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginData = _useState2[0],\n      setLoginData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Username\",\n    value: loginData.username,\n    leftIcon: React.createElement(Icon, {\n      name: \"user\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    errorStyle: {\n      color: 'red'\n    },\n    errorMessage: \"password is wrong\",\n    secureTextEntry: true,\n    value: loginData.password,\n    onChangeText: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Login\",\n    buttonStyle: {\n      backgroundColor: '#3ca938'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n\n  function handleChange(event) {\n    setLoginData(_objectSpread(_objectSpread({}, loginData), {}, _defineProperty({}, event.target.name, event.target.value)));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    loginWithUserCredentials(loginData).then(function () {\n      return history.push(\"/\");\n    }).catch(function () {\n      return setError(\"Unknown username or password.\");\n    });\n  }\n}","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/components/LoginScreen/LoginForm.js"],"names":["React","useContext","useState","Input","Button","Icon","AuthContext","initialState","username","password","LoginForm","loginWithUserCredentials","loginData","setLoginData","error","setError","color","handleChange","backgroundColor","event","target","name","value","handleSubmit","preventDefault","then","history","push","catch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;;AAEA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,uBAA5B;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAIA,eAAe,SAASC,SAAT,GAAoB;AAAA,oBAEMT,UAAU,CAACK,WAAD,CAFhB;AAAA,MAEvBK,wBAFuB,eAEvBA,wBAFuB;;AAAA,kBAGGT,QAAQ,CAACK,YAAD,CAHX;AAAA;AAAA,MAGxBK,SAHwB;AAAA,MAGbC,YAHa;;AAAA,mBAILX,QAAQ,CAAC,EAAD,CAJH;AAAA;AAAA,MAIxBY,KAJwB;AAAA,MAIjBC,QAJiB;;AAO/B,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,KAAK,EAAEH,SAAS,CAACJ,QAFrB;AAGI,IAAA,QAAQ,EACJ,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,UAAU,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAFhB;AAGI,IAAA,YAAY,EAAC,mBAHjB;AAII,IAAA,eAAe,EAAE,IAJrB;AAKI,IAAA,KAAK,EAAEJ,SAAS,CAACH,QALrB;AAMI,IAAA,YAAY,EAAEQ,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAoBI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,WAAW,EAAE;AAACC,MAAAA,eAAe,EAAC;AAAjB,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADJ;;AA6BA,WAASD,YAAT,CAAsBE,KAAtB,EAA6B;AACzBN,IAAAA,YAAY,iCAAMD,SAAN,2BAAkBO,KAAK,CAACC,MAAN,CAAaC,IAA/B,EAAsCF,KAAK,CAACC,MAAN,CAAaE,KAAnD,GAAZ;AACH;;AAED,WAASC,YAAT,CAAsBJ,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACK,cAAN;AACAb,IAAAA,wBAAwB,CAACC,SAAD,CAAxB,CACKa,IADL,CACU;AAAA,aAAMC,OAAO,CAACC,IAAR,CAAa,GAAb,CAAN;AAAA,KADV,EAEKC,KAFL,CAEW;AAAA,aAAMb,QAAQ,CAAC,+BAAD,CAAd;AAAA,KAFX;AAGH;AACJ","sourcesContent":["import React, {useContext, useState} from 'react';\nimport {View} from 'react-native';\nimport {Input, Button} from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport AuthContext from \"../../context/AuthContext\";\n\nconst initialState = {\n    username: \"\",\n    password: \"\",\n};\nexport default function LoginForm(){\n\n    const { loginWithUserCredentials } = useContext(AuthContext);\n    const [loginData, setLoginData] = useState(initialState);\n    const [error, setError] = useState(\"\");\n\n\n    return(\n        <View>\n            <Input\n                placeholder='Username'\n                value={loginData.username}\n                leftIcon={\n                    <Icon\n                        name='user'\n                        size={24}\n                        color='black'\n                    />\n                }\n            />\n            <Input\n                placeholder='Password'\n                errorStyle={{ color: 'red' }}\n                errorMessage='password is wrong'\n                secureTextEntry={true}\n                value={loginData.password}\n                onChangeText={handleChange}\n            />\n            <Button\n                title=\"Login\"\n                buttonStyle={{backgroundColor:'#3ca938'}}\n            />\n\n        </View>\n    );\n\n    function handleChange(event) {\n        setLoginData({ ...loginData, [event.target.name]: event.target.value });\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        loginWithUserCredentials(loginData)\n            .then(() => history.push(\"/\"))\n            .catch(() => setError(\"Unknown username or password.\"));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}