{"ast":null,"code":"import axios from \"axios\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\n\nvar _useContext = useContext(AuthContext),\n    token = _useContext.token;\n\nvar header = function header(token) {\n  return {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  };\n};\n\nvar url = \"http://192.168.178.76:8080/api/product?products=\";\nexport var getLiveSearchData = function getLiveSearchData(searchInput, token) {\n  return axios.get(url + searchInput, header(token)).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};","map":{"version":3,"sources":["/Users/malte/Desktop/secretAllergy/secret-allergy/frontend/src/service/LiveSearchService.js"],"names":["axios","useContext","AuthContext","token","header","headers","Authorization","url","getLiveSearchData","searchInput","get","then","response","data","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,WAAP;;kBAGkBD,UAAU,CAACC,WAAD,C;IAApBC,K,eAAAA,K;;AAGR,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACD,KAAD;AAAA,SAAY;AACvBE,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,cAAYH;AADpB;AADc,GAAZ;AAAA,CAAf;;AAKA,IAAMI,GAAG,GAAG,kDAAZ;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAAcN,KAAd;AAAA,SACzBH,KAAK,CACAU,GADL,CACSH,GAAG,GAAGE,WADf,EAC4BL,MAAM,CAACD,KAAD,CADlC,EAEKQ,IAFL,CAEU,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAvB;AAAA,GAFV,EAGKC,KAHL,CAGW,UAACC,KAAD;AAAA,WAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,GAHX,CADyB;AAAA,CAA1B","sourcesContent":["import axios from \"axios\";\nimport {useContext} from \"react\";\nimport AuthContext from \"../context/AuthContext\";\n\n\nconst { token } = useContext(AuthContext);\n\n\nconst header = (token) => ({\n    headers: {\n        Authorization: `Bearer ${token}`,\n    },\n});\nconst url = \"http://192.168.178.76:8080/api/product?products=\";\n\nexport const getLiveSearchData = (searchInput, token) =>\n        axios\n            .get(url + searchInput, header(token))\n            .then((response) => response.data)\n            .catch((error) => console.log(error));\n\n"]},"metadata":{},"sourceType":"module"}